{"version":3,"file":"layout-AHm5oBDT.js","sources":["../../../node_modules/lodash-es/toFinite.js","../../../node_modules/lodash-es/toInteger.js","../../../node_modules/lodash-es/noop.js","../../../node_modules/lodash-es/_baseFindIndex.js","../../../node_modules/lodash-es/_baseIsNaN.js","../../../node_modules/lodash-es/_strictIndexOf.js","../../../node_modules/lodash-es/_baseIndexOf.js","../../../node_modules/lodash-es/_arrayIncludes.js","../../../node_modules/lodash-es/_isFlattenable.js","../../../node_modules/lodash-es/_baseFlatten.js","../../../node_modules/lodash-es/flatten.js","../../../node_modules/lodash-es/_flatRest.js","../../../node_modules/lodash-es/_arrayReduce.js","../../../node_modules/lodash-es/_baseAssign.js","../../../node_modules/lodash-es/_baseAssignIn.js","../../../node_modules/lodash-es/_copySymbols.js","../../../node_modules/lodash-es/_getSymbolsIn.js","../../../node_modules/lodash-es/_copySymbolsIn.js","../../../node_modules/lodash-es/_getAllKeysIn.js","../../../node_modules/lodash-es/_initCloneArray.js","../../../node_modules/lodash-es/_cloneDataView.js","../../../node_modules/lodash-es/_cloneRegExp.js","../../../node_modules/lodash-es/_cloneSymbol.js","../../../node_modules/lodash-es/_initCloneByTag.js","../../../node_modules/lodash-es/_baseIsMap.js","../../../node_modules/lodash-es/isMap.js","../../../node_modules/lodash-es/_baseIsSet.js","../../../node_modules/lodash-es/isSet.js","../../../node_modules/lodash-es/_baseClone.js","../../../node_modules/lodash-es/cloneDeep.js","../../../node_modules/lodash-es/defaults.js","../../../node_modules/lodash-es/_arrayIncludesWith.js","../../../node_modules/lodash-es/last.js","../../../node_modules/lodash-es/_baseFilter.js","../../../node_modules/lodash-es/filter.js","../../../node_modules/lodash-es/_createFind.js","../../../node_modules/lodash-es/findIndex.js","../../../node_modules/lodash-es/find.js","../../../node_modules/lodash-es/forIn.js","../../../node_modules/lodash-es/forOwn.js","../../../node_modules/lodash-es/_baseGt.js","../../../node_modules/lodash-es/_baseHas.js","../../../node_modules/lodash-es/has.js","../../../node_modules/lodash-es/_baseValues.js","../../../node_modules/lodash-es/values.js","../../../node_modules/lodash-es/_baseLt.js","../../../node_modules/lodash-es/mapValues.js","../../../node_modules/lodash-es/_baseExtremum.js","../../../node_modules/lodash-es/max.js","../../../node_modules/lodash-es/min.js","../../../node_modules/lodash-es/minBy.js","../../../node_modules/lodash-es/_baseSet.js","../../../node_modules/lodash-es/_basePickBy.js","../../../node_modules/lodash-es/_baseSortBy.js","../../../node_modules/lodash-es/_compareAscending.js","../../../node_modules/lodash-es/_compareMultiple.js","../../../node_modules/lodash-es/_baseOrderBy.js","../../../node_modules/lodash-es/_basePick.js","../../../node_modules/lodash-es/pick.js","../../../node_modules/lodash-es/_baseRange.js","../../../node_modules/lodash-es/_createRange.js","../../../node_modules/lodash-es/range.js","../../../node_modules/lodash-es/_baseReduce.js","../../../node_modules/lodash-es/reduce.js","../../../node_modules/lodash-es/sortBy.js","../../../node_modules/lodash-es/_createSet.js","../../../node_modules/lodash-es/_baseUniq.js","../../../node_modules/lodash-es/union.js","../../../node_modules/lodash-es/uniqueId.js","../../../node_modules/lodash-es/_baseZipObject.js","../../../node_modules/lodash-es/zipObject.js","../../../node_modules/dagre-d3-es/src/graphlib/graph.js","../../../node_modules/dagre-d3-es/src/dagre/data/list.js","../../../node_modules/dagre-d3-es/src/dagre/greedy-fas.js","../../../node_modules/dagre-d3-es/src/dagre/acyclic.js","../../../node_modules/dagre-d3-es/src/dagre/util.js","../../../node_modules/dagre-d3-es/src/dagre/add-border-segments.js","../../../node_modules/dagre-d3-es/src/dagre/coordinate-system.js","../../../node_modules/dagre-d3-es/src/dagre/normalize.js","../../../node_modules/dagre-d3-es/src/dagre/rank/util.js","../../../node_modules/dagre-d3-es/src/dagre/rank/feasible-tree.js","../../../node_modules/dagre-d3-es/src/graphlib/alg/topsort.js","../../../node_modules/dagre-d3-es/src/graphlib/alg/dfs.js","../../../node_modules/dagre-d3-es/src/graphlib/alg/postorder.js","../../../node_modules/dagre-d3-es/src/graphlib/alg/preorder.js","../../../node_modules/dagre-d3-es/src/dagre/rank/network-simplex.js","../../../node_modules/dagre-d3-es/src/dagre/rank/index.js","../../../node_modules/dagre-d3-es/src/dagre/nesting-graph.js","../../../node_modules/dagre-d3-es/src/dagre/order/add-subgraph-constraints.js","../../../node_modules/dagre-d3-es/src/dagre/order/build-layer-graph.js","../../../node_modules/dagre-d3-es/src/dagre/order/cross-count.js","../../../node_modules/dagre-d3-es/src/dagre/order/init-order.js","../../../node_modules/dagre-d3-es/src/dagre/order/barycenter.js","../../../node_modules/dagre-d3-es/src/dagre/order/resolve-conflicts.js","../../../node_modules/dagre-d3-es/src/dagre/order/sort.js","../../../node_modules/dagre-d3-es/src/dagre/order/sort-subgraph.js","../../../node_modules/dagre-d3-es/src/dagre/order/index.js","../../../node_modules/dagre-d3-es/src/dagre/parent-dummy-chains.js","../../../node_modules/dagre-d3-es/src/dagre/position/bk.js","../../../node_modules/dagre-d3-es/src/dagre/position/index.js","../../../node_modules/dagre-d3-es/src/dagre/layout.js"],"sourcesContent":["import toNumber from './toNumber.js';\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0,\n    MAX_INTEGER = 1.7976931348623157e+308;\n\n/**\n * Converts `value` to a finite number.\n *\n * @static\n * @memberOf _\n * @since 4.12.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted number.\n * @example\n *\n * _.toFinite(3.2);\n * // => 3.2\n *\n * _.toFinite(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toFinite(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toFinite('3.2');\n * // => 3.2\n */\nfunction toFinite(value) {\n  if (!value) {\n    return value === 0 ? value : 0;\n  }\n  value = toNumber(value);\n  if (value === INFINITY || value === -INFINITY) {\n    var sign = (value < 0 ? -1 : 1);\n    return sign * MAX_INTEGER;\n  }\n  return value === value ? value : 0;\n}\n\nexport default toFinite;\n","import toFinite from './toFinite.js';\n\n/**\n * Converts `value` to an integer.\n *\n * **Note:** This method is loosely based on\n * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted integer.\n * @example\n *\n * _.toInteger(3.2);\n * // => 3\n *\n * _.toInteger(Number.MIN_VALUE);\n * // => 0\n *\n * _.toInteger(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toInteger('3.2');\n * // => 3\n */\nfunction toInteger(value) {\n  var result = toFinite(value),\n      remainder = result % 1;\n\n  return result === result ? (remainder ? result - remainder : result) : 0;\n}\n\nexport default toInteger;\n","/**\n * This method returns `undefined`.\n *\n * @static\n * @memberOf _\n * @since 2.3.0\n * @category Util\n * @example\n *\n * _.times(2, _.noop);\n * // => [undefined, undefined]\n */\nfunction noop() {\n  // No operation performed.\n}\n\nexport default noop;\n","/**\n * The base implementation of `_.findIndex` and `_.findLastIndex` without\n * support for iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Function} predicate The function invoked per iteration.\n * @param {number} fromIndex The index to search from.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseFindIndex(array, predicate, fromIndex, fromRight) {\n  var length = array.length,\n      index = fromIndex + (fromRight ? 1 : -1);\n\n  while ((fromRight ? index-- : ++index < length)) {\n    if (predicate(array[index], index, array)) {\n      return index;\n    }\n  }\n  return -1;\n}\n\nexport default baseFindIndex;\n","/**\n * The base implementation of `_.isNaN` without support for number objects.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n */\nfunction baseIsNaN(value) {\n  return value !== value;\n}\n\nexport default baseIsNaN;\n","/**\n * A specialized version of `_.indexOf` which performs strict equality\n * comparisons of values, i.e. `===`.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} fromIndex The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction strictIndexOf(array, value, fromIndex) {\n  var index = fromIndex - 1,\n      length = array.length;\n\n  while (++index < length) {\n    if (array[index] === value) {\n      return index;\n    }\n  }\n  return -1;\n}\n\nexport default strictIndexOf;\n","import baseFindIndex from './_baseFindIndex.js';\nimport baseIsNaN from './_baseIsNaN.js';\nimport strictIndexOf from './_strictIndexOf.js';\n\n/**\n * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} fromIndex The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseIndexOf(array, value, fromIndex) {\n  return value === value\n    ? strictIndexOf(array, value, fromIndex)\n    : baseFindIndex(array, baseIsNaN, fromIndex);\n}\n\nexport default baseIndexOf;\n","import baseIndexOf from './_baseIndexOf.js';\n\n/**\n * A specialized version of `_.includes` for arrays without support for\n * specifying an index to search from.\n *\n * @private\n * @param {Array} [array] The array to inspect.\n * @param {*} target The value to search for.\n * @returns {boolean} Returns `true` if `target` is found, else `false`.\n */\nfunction arrayIncludes(array, value) {\n  var length = array == null ? 0 : array.length;\n  return !!length && baseIndexOf(array, value, 0) > -1;\n}\n\nexport default arrayIncludes;\n","import Symbol from './_Symbol.js';\nimport isArguments from './isArguments.js';\nimport isArray from './isArray.js';\n\n/** Built-in value references. */\nvar spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined;\n\n/**\n * Checks if `value` is a flattenable `arguments` object or array.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\n */\nfunction isFlattenable(value) {\n  return isArray(value) || isArguments(value) ||\n    !!(spreadableSymbol && value && value[spreadableSymbol]);\n}\n\nexport default isFlattenable;\n","import arrayPush from './_arrayPush.js';\nimport isFlattenable from './_isFlattenable.js';\n\n/**\n * The base implementation of `_.flatten` with support for restricting flattening.\n *\n * @private\n * @param {Array} array The array to flatten.\n * @param {number} depth The maximum recursion depth.\n * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.\n * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.\n * @param {Array} [result=[]] The initial result value.\n * @returns {Array} Returns the new flattened array.\n */\nfunction baseFlatten(array, depth, predicate, isStrict, result) {\n  var index = -1,\n      length = array.length;\n\n  predicate || (predicate = isFlattenable);\n  result || (result = []);\n\n  while (++index < length) {\n    var value = array[index];\n    if (depth > 0 && predicate(value)) {\n      if (depth > 1) {\n        // Recursively flatten arrays (susceptible to call stack limits).\n        baseFlatten(value, depth - 1, predicate, isStrict, result);\n      } else {\n        arrayPush(result, value);\n      }\n    } else if (!isStrict) {\n      result[result.length] = value;\n    }\n  }\n  return result;\n}\n\nexport default baseFlatten;\n","import baseFlatten from './_baseFlatten.js';\n\n/**\n * Flattens `array` a single level deep.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to flatten.\n * @returns {Array} Returns the new flattened array.\n * @example\n *\n * _.flatten([1, [2, [3, [4]], 5]]);\n * // => [1, 2, [3, [4]], 5]\n */\nfunction flatten(array) {\n  var length = array == null ? 0 : array.length;\n  return length ? baseFlatten(array, 1) : [];\n}\n\nexport default flatten;\n","import flatten from './flatten.js';\nimport overRest from './_overRest.js';\nimport setToString from './_setToString.js';\n\n/**\n * A specialized version of `baseRest` which flattens the rest array.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @returns {Function} Returns the new function.\n */\nfunction flatRest(func) {\n  return setToString(overRest(func, undefined, flatten), func + '');\n}\n\nexport default flatRest;\n","/**\n * A specialized version of `_.reduce` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {*} [accumulator] The initial value.\n * @param {boolean} [initAccum] Specify using the first element of `array` as\n *  the initial value.\n * @returns {*} Returns the accumulated value.\n */\nfunction arrayReduce(array, iteratee, accumulator, initAccum) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  if (initAccum && length) {\n    accumulator = array[++index];\n  }\n  while (++index < length) {\n    accumulator = iteratee(accumulator, array[index], index, array);\n  }\n  return accumulator;\n}\n\nexport default arrayReduce;\n","import copyObject from './_copyObject.js';\nimport keys from './keys.js';\n\n/**\n * The base implementation of `_.assign` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssign(object, source) {\n  return object && copyObject(source, keys(source), object);\n}\n\nexport default baseAssign;\n","import copyObject from './_copyObject.js';\nimport keysIn from './keysIn.js';\n\n/**\n * The base implementation of `_.assignIn` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssignIn(object, source) {\n  return object && copyObject(source, keysIn(source), object);\n}\n\nexport default baseAssignIn;\n","import copyObject from './_copyObject.js';\nimport getSymbols from './_getSymbols.js';\n\n/**\n * Copies own symbols of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\nfunction copySymbols(source, object) {\n  return copyObject(source, getSymbols(source), object);\n}\n\nexport default copySymbols;\n","import arrayPush from './_arrayPush.js';\nimport getPrototype from './_getPrototype.js';\nimport getSymbols from './_getSymbols.js';\nimport stubArray from './stubArray.js';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols;\n\n/**\n * Creates an array of the own and inherited enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {\n  var result = [];\n  while (object) {\n    arrayPush(result, getSymbols(object));\n    object = getPrototype(object);\n  }\n  return result;\n};\n\nexport default getSymbolsIn;\n","import copyObject from './_copyObject.js';\nimport getSymbolsIn from './_getSymbolsIn.js';\n\n/**\n * Copies own and inherited symbols of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\nfunction copySymbolsIn(source, object) {\n  return copyObject(source, getSymbolsIn(source), object);\n}\n\nexport default copySymbolsIn;\n","import baseGetAllKeys from './_baseGetAllKeys.js';\nimport getSymbolsIn from './_getSymbolsIn.js';\nimport keysIn from './keysIn.js';\n\n/**\n * Creates an array of own and inherited enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeysIn(object) {\n  return baseGetAllKeys(object, keysIn, getSymbolsIn);\n}\n\nexport default getAllKeysIn;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Initializes an array clone.\n *\n * @private\n * @param {Array} array The array to clone.\n * @returns {Array} Returns the initialized clone.\n */\nfunction initCloneArray(array) {\n  var length = array.length,\n      result = new array.constructor(length);\n\n  // Add properties assigned by `RegExp#exec`.\n  if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n    result.index = array.index;\n    result.input = array.input;\n  }\n  return result;\n}\n\nexport default initCloneArray;\n","import cloneArrayBuffer from './_cloneArrayBuffer.js';\n\n/**\n * Creates a clone of `dataView`.\n *\n * @private\n * @param {Object} dataView The data view to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned data view.\n */\nfunction cloneDataView(dataView, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n  return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n}\n\nexport default cloneDataView;\n","/** Used to match `RegExp` flags from their coerced string values. */\nvar reFlags = /\\w*$/;\n\n/**\n * Creates a clone of `regexp`.\n *\n * @private\n * @param {Object} regexp The regexp to clone.\n * @returns {Object} Returns the cloned regexp.\n */\nfunction cloneRegExp(regexp) {\n  var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n  result.lastIndex = regexp.lastIndex;\n  return result;\n}\n\nexport default cloneRegExp;\n","import Symbol from './_Symbol.js';\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * Creates a clone of the `symbol` object.\n *\n * @private\n * @param {Object} symbol The symbol object to clone.\n * @returns {Object} Returns the cloned symbol object.\n */\nfunction cloneSymbol(symbol) {\n  return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n}\n\nexport default cloneSymbol;\n","import cloneArrayBuffer from './_cloneArrayBuffer.js';\nimport cloneDataView from './_cloneDataView.js';\nimport cloneRegExp from './_cloneRegExp.js';\nimport cloneSymbol from './_cloneSymbol.js';\nimport cloneTypedArray from './_cloneTypedArray.js';\n\n/** `Object#toString` result references. */\nvar boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/**\n * Initializes an object clone based on its `toStringTag`.\n *\n * **Note:** This function only supports cloning values with tags of\n * `Boolean`, `Date`, `Error`, `Map`, `Number`, `RegExp`, `Set`, or `String`.\n *\n * @private\n * @param {Object} object The object to clone.\n * @param {string} tag The `toStringTag` of the object to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneByTag(object, tag, isDeep) {\n  var Ctor = object.constructor;\n  switch (tag) {\n    case arrayBufferTag:\n      return cloneArrayBuffer(object);\n\n    case boolTag:\n    case dateTag:\n      return new Ctor(+object);\n\n    case dataViewTag:\n      return cloneDataView(object, isDeep);\n\n    case float32Tag: case float64Tag:\n    case int8Tag: case int16Tag: case int32Tag:\n    case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n      return cloneTypedArray(object, isDeep);\n\n    case mapTag:\n      return new Ctor;\n\n    case numberTag:\n    case stringTag:\n      return new Ctor(object);\n\n    case regexpTag:\n      return cloneRegExp(object);\n\n    case setTag:\n      return new Ctor;\n\n    case symbolTag:\n      return cloneSymbol(object);\n  }\n}\n\nexport default initCloneByTag;\n","import getTag from './_getTag.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]';\n\n/**\n * The base implementation of `_.isMap` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n */\nfunction baseIsMap(value) {\n  return isObjectLike(value) && getTag(value) == mapTag;\n}\n\nexport default baseIsMap;\n","import baseIsMap from './_baseIsMap.js';\nimport baseUnary from './_baseUnary.js';\nimport nodeUtil from './_nodeUtil.js';\n\n/* Node.js helper references. */\nvar nodeIsMap = nodeUtil && nodeUtil.isMap;\n\n/**\n * Checks if `value` is classified as a `Map` object.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n * @example\n *\n * _.isMap(new Map);\n * // => true\n *\n * _.isMap(new WeakMap);\n * // => false\n */\nvar isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;\n\nexport default isMap;\n","import getTag from './_getTag.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar setTag = '[object Set]';\n\n/**\n * The base implementation of `_.isSet` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n */\nfunction baseIsSet(value) {\n  return isObjectLike(value) && getTag(value) == setTag;\n}\n\nexport default baseIsSet;\n","import baseIsSet from './_baseIsSet.js';\nimport baseUnary from './_baseUnary.js';\nimport nodeUtil from './_nodeUtil.js';\n\n/* Node.js helper references. */\nvar nodeIsSet = nodeUtil && nodeUtil.isSet;\n\n/**\n * Checks if `value` is classified as a `Set` object.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n * @example\n *\n * _.isSet(new Set);\n * // => true\n *\n * _.isSet(new WeakSet);\n * // => false\n */\nvar isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;\n\nexport default isSet;\n","import Stack from './_Stack.js';\nimport arrayEach from './_arrayEach.js';\nimport assignValue from './_assignValue.js';\nimport baseAssign from './_baseAssign.js';\nimport baseAssignIn from './_baseAssignIn.js';\nimport cloneBuffer from './_cloneBuffer.js';\nimport copyArray from './_copyArray.js';\nimport copySymbols from './_copySymbols.js';\nimport copySymbolsIn from './_copySymbolsIn.js';\nimport getAllKeys from './_getAllKeys.js';\nimport getAllKeysIn from './_getAllKeysIn.js';\nimport getTag from './_getTag.js';\nimport initCloneArray from './_initCloneArray.js';\nimport initCloneByTag from './_initCloneByTag.js';\nimport initCloneObject from './_initCloneObject.js';\nimport isArray from './isArray.js';\nimport isBuffer from './isBuffer.js';\nimport isMap from './isMap.js';\nimport isObject from './isObject.js';\nimport isSet from './isSet.js';\nimport keys from './keys.js';\nimport keysIn from './keysIn.js';\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_FLAT_FLAG = 2,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values supported by `_.clone`. */\nvar cloneableTags = {};\ncloneableTags[argsTag] = cloneableTags[arrayTag] =\ncloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\ncloneableTags[boolTag] = cloneableTags[dateTag] =\ncloneableTags[float32Tag] = cloneableTags[float64Tag] =\ncloneableTags[int8Tag] = cloneableTags[int16Tag] =\ncloneableTags[int32Tag] = cloneableTags[mapTag] =\ncloneableTags[numberTag] = cloneableTags[objectTag] =\ncloneableTags[regexpTag] = cloneableTags[setTag] =\ncloneableTags[stringTag] = cloneableTags[symbolTag] =\ncloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\ncloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\ncloneableTags[errorTag] = cloneableTags[funcTag] =\ncloneableTags[weakMapTag] = false;\n\n/**\n * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n * traversed objects.\n *\n * @private\n * @param {*} value The value to clone.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Deep clone\n *  2 - Flatten inherited properties\n *  4 - Clone symbols\n * @param {Function} [customizer] The function to customize cloning.\n * @param {string} [key] The key of `value`.\n * @param {Object} [object] The parent object of `value`.\n * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n * @returns {*} Returns the cloned value.\n */\nfunction baseClone(value, bitmask, customizer, key, object, stack) {\n  var result,\n      isDeep = bitmask & CLONE_DEEP_FLAG,\n      isFlat = bitmask & CLONE_FLAT_FLAG,\n      isFull = bitmask & CLONE_SYMBOLS_FLAG;\n\n  if (customizer) {\n    result = object ? customizer(value, key, object, stack) : customizer(value);\n  }\n  if (result !== undefined) {\n    return result;\n  }\n  if (!isObject(value)) {\n    return value;\n  }\n  var isArr = isArray(value);\n  if (isArr) {\n    result = initCloneArray(value);\n    if (!isDeep) {\n      return copyArray(value, result);\n    }\n  } else {\n    var tag = getTag(value),\n        isFunc = tag == funcTag || tag == genTag;\n\n    if (isBuffer(value)) {\n      return cloneBuffer(value, isDeep);\n    }\n    if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n      result = (isFlat || isFunc) ? {} : initCloneObject(value);\n      if (!isDeep) {\n        return isFlat\n          ? copySymbolsIn(value, baseAssignIn(result, value))\n          : copySymbols(value, baseAssign(result, value));\n      }\n    } else {\n      if (!cloneableTags[tag]) {\n        return object ? value : {};\n      }\n      result = initCloneByTag(value, tag, isDeep);\n    }\n  }\n  // Check for circular references and return its corresponding clone.\n  stack || (stack = new Stack);\n  var stacked = stack.get(value);\n  if (stacked) {\n    return stacked;\n  }\n  stack.set(value, result);\n\n  if (isSet(value)) {\n    value.forEach(function(subValue) {\n      result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));\n    });\n  } else if (isMap(value)) {\n    value.forEach(function(subValue, key) {\n      result.set(key, baseClone(subValue, bitmask, customizer, key, value, stack));\n    });\n  }\n\n  var keysFunc = isFull\n    ? (isFlat ? getAllKeysIn : getAllKeys)\n    : (isFlat ? keysIn : keys);\n\n  var props = isArr ? undefined : keysFunc(value);\n  arrayEach(props || value, function(subValue, key) {\n    if (props) {\n      key = subValue;\n      subValue = value[key];\n    }\n    // Recursively populate clone (susceptible to call stack limits).\n    assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));\n  });\n  return result;\n}\n\nexport default baseClone;\n","import baseClone from './_baseClone.js';\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/**\n * This method is like `_.clone` except that it recursively clones `value`.\n *\n * @static\n * @memberOf _\n * @since 1.0.0\n * @category Lang\n * @param {*} value The value to recursively clone.\n * @returns {*} Returns the deep cloned value.\n * @see _.clone\n * @example\n *\n * var objects = [{ 'a': 1 }, { 'b': 2 }];\n *\n * var deep = _.cloneDeep(objects);\n * console.log(deep[0] === objects[0]);\n * // => false\n */\nfunction cloneDeep(value) {\n  return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);\n}\n\nexport default cloneDeep;\n","import baseRest from './_baseRest.js';\nimport eq from './eq.js';\nimport isIterateeCall from './_isIterateeCall.js';\nimport keysIn from './keysIn.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Assigns own and inherited enumerable string keyed properties of source\n * objects to the destination object for all destination properties that\n * resolve to `undefined`. Source objects are applied from left to right.\n * Once a property is set, additional values of the same property are ignored.\n *\n * **Note:** This method mutates `object`.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The destination object.\n * @param {...Object} [sources] The source objects.\n * @returns {Object} Returns `object`.\n * @see _.defaultsDeep\n * @example\n *\n * _.defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n * // => { 'a': 1, 'b': 2 }\n */\nvar defaults = baseRest(function(object, sources) {\n  object = Object(object);\n\n  var index = -1;\n  var length = sources.length;\n  var guard = length > 2 ? sources[2] : undefined;\n\n  if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n    length = 1;\n  }\n\n  while (++index < length) {\n    var source = sources[index];\n    var props = keysIn(source);\n    var propsIndex = -1;\n    var propsLength = props.length;\n\n    while (++propsIndex < propsLength) {\n      var key = props[propsIndex];\n      var value = object[key];\n\n      if (value === undefined ||\n          (eq(value, objectProto[key]) && !hasOwnProperty.call(object, key))) {\n        object[key] = source[key];\n      }\n    }\n  }\n\n  return object;\n});\n\nexport default defaults;\n","/**\n * This function is like `arrayIncludes` except that it accepts a comparator.\n *\n * @private\n * @param {Array} [array] The array to inspect.\n * @param {*} target The value to search for.\n * @param {Function} comparator The comparator invoked per element.\n * @returns {boolean} Returns `true` if `target` is found, else `false`.\n */\nfunction arrayIncludesWith(array, value, comparator) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (comparator(value, array[index])) {\n      return true;\n    }\n  }\n  return false;\n}\n\nexport default arrayIncludesWith;\n","/**\n * Gets the last element of `array`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to query.\n * @returns {*} Returns the last element of `array`.\n * @example\n *\n * _.last([1, 2, 3]);\n * // => 3\n */\nfunction last(array) {\n  var length = array == null ? 0 : array.length;\n  return length ? array[length - 1] : undefined;\n}\n\nexport default last;\n","import baseEach from './_baseEach.js';\n\n/**\n * The base implementation of `_.filter` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction baseFilter(collection, predicate) {\n  var result = [];\n  baseEach(collection, function(value, index, collection) {\n    if (predicate(value, index, collection)) {\n      result.push(value);\n    }\n  });\n  return result;\n}\n\nexport default baseFilter;\n","import arrayFilter from './_arrayFilter.js';\nimport baseFilter from './_baseFilter.js';\nimport baseIteratee from './_baseIteratee.js';\nimport isArray from './isArray.js';\n\n/**\n * Iterates over elements of `collection`, returning an array of all elements\n * `predicate` returns truthy for. The predicate is invoked with three\n * arguments: (value, index|key, collection).\n *\n * **Note:** Unlike `_.remove`, this method returns a new array.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n * @see _.reject\n * @example\n *\n * var users = [\n *   { 'user': 'barney', 'age': 36, 'active': true },\n *   { 'user': 'fred',   'age': 40, 'active': false }\n * ];\n *\n * _.filter(users, function(o) { return !o.active; });\n * // => objects for ['fred']\n *\n * // The `_.matches` iteratee shorthand.\n * _.filter(users, { 'age': 36, 'active': true });\n * // => objects for ['barney']\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.filter(users, ['active', false]);\n * // => objects for ['fred']\n *\n * // The `_.property` iteratee shorthand.\n * _.filter(users, 'active');\n * // => objects for ['barney']\n *\n * // Combining several predicates using `_.overEvery` or `_.overSome`.\n * _.filter(users, _.overSome([{ 'age': 36 }, ['age', 40]]));\n * // => objects for ['fred', 'barney']\n */\nfunction filter(collection, predicate) {\n  var func = isArray(collection) ? arrayFilter : baseFilter;\n  return func(collection, baseIteratee(predicate, 3));\n}\n\nexport default filter;\n","import baseIteratee from './_baseIteratee.js';\nimport isArrayLike from './isArrayLike.js';\nimport keys from './keys.js';\n\n/**\n * Creates a `_.find` or `_.findLast` function.\n *\n * @private\n * @param {Function} findIndexFunc The function to find the collection index.\n * @returns {Function} Returns the new find function.\n */\nfunction createFind(findIndexFunc) {\n  return function(collection, predicate, fromIndex) {\n    var iterable = Object(collection);\n    if (!isArrayLike(collection)) {\n      var iteratee = baseIteratee(predicate, 3);\n      collection = keys(collection);\n      predicate = function(key) { return iteratee(iterable[key], key, iterable); };\n    }\n    var index = findIndexFunc(collection, predicate, fromIndex);\n    return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;\n  };\n}\n\nexport default createFind;\n","import baseFindIndex from './_baseFindIndex.js';\nimport baseIteratee from './_baseIteratee.js';\nimport toInteger from './toInteger.js';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * This method is like `_.find` except that it returns the index of the first\n * element `predicate` returns truthy for instead of the element itself.\n *\n * @static\n * @memberOf _\n * @since 1.1.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @param {number} [fromIndex=0] The index to search from.\n * @returns {number} Returns the index of the found element, else `-1`.\n * @example\n *\n * var users = [\n *   { 'user': 'barney',  'active': false },\n *   { 'user': 'fred',    'active': false },\n *   { 'user': 'pebbles', 'active': true }\n * ];\n *\n * _.findIndex(users, function(o) { return o.user == 'barney'; });\n * // => 0\n *\n * // The `_.matches` iteratee shorthand.\n * _.findIndex(users, { 'user': 'fred', 'active': false });\n * // => 1\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.findIndex(users, ['active', false]);\n * // => 0\n *\n * // The `_.property` iteratee shorthand.\n * _.findIndex(users, 'active');\n * // => 2\n */\nfunction findIndex(array, predicate, fromIndex) {\n  var length = array == null ? 0 : array.length;\n  if (!length) {\n    return -1;\n  }\n  var index = fromIndex == null ? 0 : toInteger(fromIndex);\n  if (index < 0) {\n    index = nativeMax(length + index, 0);\n  }\n  return baseFindIndex(array, baseIteratee(predicate, 3), index);\n}\n\nexport default findIndex;\n","import createFind from './_createFind.js';\nimport findIndex from './findIndex.js';\n\n/**\n * Iterates over elements of `collection`, returning the first element\n * `predicate` returns truthy for. The predicate is invoked with three\n * arguments: (value, index|key, collection).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to inspect.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @param {number} [fromIndex=0] The index to search from.\n * @returns {*} Returns the matched element, else `undefined`.\n * @example\n *\n * var users = [\n *   { 'user': 'barney',  'age': 36, 'active': true },\n *   { 'user': 'fred',    'age': 40, 'active': false },\n *   { 'user': 'pebbles', 'age': 1,  'active': true }\n * ];\n *\n * _.find(users, function(o) { return o.age < 40; });\n * // => object for 'barney'\n *\n * // The `_.matches` iteratee shorthand.\n * _.find(users, { 'age': 1, 'active': true });\n * // => object for 'pebbles'\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.find(users, ['active', false]);\n * // => object for 'fred'\n *\n * // The `_.property` iteratee shorthand.\n * _.find(users, 'active');\n * // => object for 'barney'\n */\nvar find = createFind(findIndex);\n\nexport default find;\n","import baseFor from './_baseFor.js';\nimport castFunction from './_castFunction.js';\nimport keysIn from './keysIn.js';\n\n/**\n * Iterates over own and inherited enumerable string keyed properties of an\n * object and invokes `iteratee` for each property. The iteratee is invoked\n * with three arguments: (value, key, object). Iteratee functions may exit\n * iteration early by explicitly returning `false`.\n *\n * @static\n * @memberOf _\n * @since 0.3.0\n * @category Object\n * @param {Object} object The object to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Object} Returns `object`.\n * @see _.forInRight\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.forIn(new Foo, function(value, key) {\n *   console.log(key);\n * });\n * // => Logs 'a', 'b', then 'c' (iteration order is not guaranteed).\n */\nfunction forIn(object, iteratee) {\n  return object == null\n    ? object\n    : baseFor(object, castFunction(iteratee), keysIn);\n}\n\nexport default forIn;\n","import baseForOwn from './_baseForOwn.js';\nimport castFunction from './_castFunction.js';\n\n/**\n * Iterates over own enumerable string keyed properties of an object and\n * invokes `iteratee` for each property. The iteratee is invoked with three\n * arguments: (value, key, object). Iteratee functions may exit iteration\n * early by explicitly returning `false`.\n *\n * @static\n * @memberOf _\n * @since 0.3.0\n * @category Object\n * @param {Object} object The object to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Object} Returns `object`.\n * @see _.forOwnRight\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.forOwn(new Foo, function(value, key) {\n *   console.log(key);\n * });\n * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n */\nfunction forOwn(object, iteratee) {\n  return object && baseForOwn(object, castFunction(iteratee));\n}\n\nexport default forOwn;\n","/**\n * The base implementation of `_.gt` which doesn't coerce arguments.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if `value` is greater than `other`,\n *  else `false`.\n */\nfunction baseGt(value, other) {\n  return value > other;\n}\n\nexport default baseGt;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * The base implementation of `_.has` without support for deep paths.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {Array|string} key The key to check.\n * @returns {boolean} Returns `true` if `key` exists, else `false`.\n */\nfunction baseHas(object, key) {\n  return object != null && hasOwnProperty.call(object, key);\n}\n\nexport default baseHas;\n","import baseHas from './_baseHas.js';\nimport hasPath from './_hasPath.js';\n\n/**\n * Checks if `path` is a direct property of `object`.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n * @example\n *\n * var object = { 'a': { 'b': 2 } };\n * var other = _.create({ 'a': _.create({ 'b': 2 }) });\n *\n * _.has(object, 'a');\n * // => true\n *\n * _.has(object, 'a.b');\n * // => true\n *\n * _.has(object, ['a', 'b']);\n * // => true\n *\n * _.has(other, 'a');\n * // => false\n */\nfunction has(object, path) {\n  return object != null && hasPath(object, path, baseHas);\n}\n\nexport default has;\n","import arrayMap from './_arrayMap.js';\n\n/**\n * The base implementation of `_.values` and `_.valuesIn` which creates an\n * array of `object` property values corresponding to the property names\n * of `props`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array} props The property names to get values for.\n * @returns {Object} Returns the array of property values.\n */\nfunction baseValues(object, props) {\n  return arrayMap(props, function(key) {\n    return object[key];\n  });\n}\n\nexport default baseValues;\n","import baseValues from './_baseValues.js';\nimport keys from './keys.js';\n\n/**\n * Creates an array of the own enumerable string keyed property values of `object`.\n *\n * **Note:** Non-object values are coerced to objects.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property values.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.values(new Foo);\n * // => [1, 2] (iteration order is not guaranteed)\n *\n * _.values('hi');\n * // => ['h', 'i']\n */\nfunction values(object) {\n  return object == null ? [] : baseValues(object, keys(object));\n}\n\nexport default values;\n","/**\n * The base implementation of `_.lt` which doesn't coerce arguments.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if `value` is less than `other`,\n *  else `false`.\n */\nfunction baseLt(value, other) {\n  return value < other;\n}\n\nexport default baseLt;\n","import baseAssignValue from './_baseAssignValue.js';\nimport baseForOwn from './_baseForOwn.js';\nimport baseIteratee from './_baseIteratee.js';\n\n/**\n * Creates an object with the same keys as `object` and values generated\n * by running each own enumerable string keyed property of `object` thru\n * `iteratee`. The iteratee is invoked with three arguments:\n * (value, key, object).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Object\n * @param {Object} object The object to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Object} Returns the new mapped object.\n * @see _.mapKeys\n * @example\n *\n * var users = {\n *   'fred':    { 'user': 'fred',    'age': 40 },\n *   'pebbles': { 'user': 'pebbles', 'age': 1 }\n * };\n *\n * _.mapValues(users, function(o) { return o.age; });\n * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n *\n * // The `_.property` iteratee shorthand.\n * _.mapValues(users, 'age');\n * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n */\nfunction mapValues(object, iteratee) {\n  var result = {};\n  iteratee = baseIteratee(iteratee, 3);\n\n  baseForOwn(object, function(value, key, object) {\n    baseAssignValue(result, key, iteratee(value, key, object));\n  });\n  return result;\n}\n\nexport default mapValues;\n","import isSymbol from './isSymbol.js';\n\n/**\n * The base implementation of methods like `_.max` and `_.min` which accepts a\n * `comparator` to determine the extremum value.\n *\n * @private\n * @param {Array} array The array to iterate over.\n * @param {Function} iteratee The iteratee invoked per iteration.\n * @param {Function} comparator The comparator used to compare values.\n * @returns {*} Returns the extremum value.\n */\nfunction baseExtremum(array, iteratee, comparator) {\n  var index = -1,\n      length = array.length;\n\n  while (++index < length) {\n    var value = array[index],\n        current = iteratee(value);\n\n    if (current != null && (computed === undefined\n          ? (current === current && !isSymbol(current))\n          : comparator(current, computed)\n        )) {\n      var computed = current,\n          result = value;\n    }\n  }\n  return result;\n}\n\nexport default baseExtremum;\n","import baseExtremum from './_baseExtremum.js';\nimport baseGt from './_baseGt.js';\nimport identity from './identity.js';\n\n/**\n * Computes the maximum value of `array`. If `array` is empty or falsey,\n * `undefined` is returned.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Math\n * @param {Array} array The array to iterate over.\n * @returns {*} Returns the maximum value.\n * @example\n *\n * _.max([4, 2, 8, 6]);\n * // => 8\n *\n * _.max([]);\n * // => undefined\n */\nfunction max(array) {\n  return (array && array.length)\n    ? baseExtremum(array, identity, baseGt)\n    : undefined;\n}\n\nexport default max;\n","import baseExtremum from './_baseExtremum.js';\nimport baseLt from './_baseLt.js';\nimport identity from './identity.js';\n\n/**\n * Computes the minimum value of `array`. If `array` is empty or falsey,\n * `undefined` is returned.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Math\n * @param {Array} array The array to iterate over.\n * @returns {*} Returns the minimum value.\n * @example\n *\n * _.min([4, 2, 8, 6]);\n * // => 2\n *\n * _.min([]);\n * // => undefined\n */\nfunction min(array) {\n  return (array && array.length)\n    ? baseExtremum(array, identity, baseLt)\n    : undefined;\n}\n\nexport default min;\n","import baseExtremum from './_baseExtremum.js';\nimport baseIteratee from './_baseIteratee.js';\nimport baseLt from './_baseLt.js';\n\n/**\n * This method is like `_.min` except that it accepts `iteratee` which is\n * invoked for each element in `array` to generate the criterion by which\n * the value is ranked. The iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Math\n * @param {Array} array The array to iterate over.\n * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n * @returns {*} Returns the minimum value.\n * @example\n *\n * var objects = [{ 'n': 1 }, { 'n': 2 }];\n *\n * _.minBy(objects, function(o) { return o.n; });\n * // => { 'n': 1 }\n *\n * // The `_.property` iteratee shorthand.\n * _.minBy(objects, 'n');\n * // => { 'n': 1 }\n */\nfunction minBy(array, iteratee) {\n  return (array && array.length)\n    ? baseExtremum(array, baseIteratee(iteratee, 2), baseLt)\n    : undefined;\n}\n\nexport default minBy;\n","import assignValue from './_assignValue.js';\nimport castPath from './_castPath.js';\nimport isIndex from './_isIndex.js';\nimport isObject from './isObject.js';\nimport toKey from './_toKey.js';\n\n/**\n * The base implementation of `_.set`.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {Array|string} path The path of the property to set.\n * @param {*} value The value to set.\n * @param {Function} [customizer] The function to customize path creation.\n * @returns {Object} Returns `object`.\n */\nfunction baseSet(object, path, value, customizer) {\n  if (!isObject(object)) {\n    return object;\n  }\n  path = castPath(path, object);\n\n  var index = -1,\n      length = path.length,\n      lastIndex = length - 1,\n      nested = object;\n\n  while (nested != null && ++index < length) {\n    var key = toKey(path[index]),\n        newValue = value;\n\n    if (key === '__proto__' || key === 'constructor' || key === 'prototype') {\n      return object;\n    }\n\n    if (index != lastIndex) {\n      var objValue = nested[key];\n      newValue = customizer ? customizer(objValue, key, nested) : undefined;\n      if (newValue === undefined) {\n        newValue = isObject(objValue)\n          ? objValue\n          : (isIndex(path[index + 1]) ? [] : {});\n      }\n    }\n    assignValue(nested, key, newValue);\n    nested = nested[key];\n  }\n  return object;\n}\n\nexport default baseSet;\n","import baseGet from './_baseGet.js';\nimport baseSet from './_baseSet.js';\nimport castPath from './_castPath.js';\n\n/**\n * The base implementation of  `_.pickBy` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The source object.\n * @param {string[]} paths The property paths to pick.\n * @param {Function} predicate The function invoked per property.\n * @returns {Object} Returns the new object.\n */\nfunction basePickBy(object, paths, predicate) {\n  var index = -1,\n      length = paths.length,\n      result = {};\n\n  while (++index < length) {\n    var path = paths[index],\n        value = baseGet(object, path);\n\n    if (predicate(value, path)) {\n      baseSet(result, castPath(path, object), value);\n    }\n  }\n  return result;\n}\n\nexport default basePickBy;\n","/**\n * The base implementation of `_.sortBy` which uses `comparer` to define the\n * sort order of `array` and replaces criteria objects with their corresponding\n * values.\n *\n * @private\n * @param {Array} array The array to sort.\n * @param {Function} comparer The function to define sort order.\n * @returns {Array} Returns `array`.\n */\nfunction baseSortBy(array, comparer) {\n  var length = array.length;\n\n  array.sort(comparer);\n  while (length--) {\n    array[length] = array[length].value;\n  }\n  return array;\n}\n\nexport default baseSortBy;\n","import isSymbol from './isSymbol.js';\n\n/**\n * Compares values to sort them in ascending order.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {number} Returns the sort order indicator for `value`.\n */\nfunction compareAscending(value, other) {\n  if (value !== other) {\n    var valIsDefined = value !== undefined,\n        valIsNull = value === null,\n        valIsReflexive = value === value,\n        valIsSymbol = isSymbol(value);\n\n    var othIsDefined = other !== undefined,\n        othIsNull = other === null,\n        othIsReflexive = other === other,\n        othIsSymbol = isSymbol(other);\n\n    if ((!othIsNull && !othIsSymbol && !valIsSymbol && value > other) ||\n        (valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol) ||\n        (valIsNull && othIsDefined && othIsReflexive) ||\n        (!valIsDefined && othIsReflexive) ||\n        !valIsReflexive) {\n      return 1;\n    }\n    if ((!valIsNull && !valIsSymbol && !othIsSymbol && value < other) ||\n        (othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol) ||\n        (othIsNull && valIsDefined && valIsReflexive) ||\n        (!othIsDefined && valIsReflexive) ||\n        !othIsReflexive) {\n      return -1;\n    }\n  }\n  return 0;\n}\n\nexport default compareAscending;\n","import compareAscending from './_compareAscending.js';\n\n/**\n * Used by `_.orderBy` to compare multiple properties of a value to another\n * and stable sort them.\n *\n * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,\n * specify an order of \"desc\" for descending or \"asc\" for ascending sort order\n * of corresponding values.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {boolean[]|string[]} orders The order to sort by for each property.\n * @returns {number} Returns the sort order indicator for `object`.\n */\nfunction compareMultiple(object, other, orders) {\n  var index = -1,\n      objCriteria = object.criteria,\n      othCriteria = other.criteria,\n      length = objCriteria.length,\n      ordersLength = orders.length;\n\n  while (++index < length) {\n    var result = compareAscending(objCriteria[index], othCriteria[index]);\n    if (result) {\n      if (index >= ordersLength) {\n        return result;\n      }\n      var order = orders[index];\n      return result * (order == 'desc' ? -1 : 1);\n    }\n  }\n  // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications\n  // that causes it, under certain circumstances, to provide the same value for\n  // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247\n  // for more details.\n  //\n  // This also ensures a stable sort in V8 and other engines.\n  // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.\n  return object.index - other.index;\n}\n\nexport default compareMultiple;\n","import arrayMap from './_arrayMap.js';\nimport baseGet from './_baseGet.js';\nimport baseIteratee from './_baseIteratee.js';\nimport baseMap from './_baseMap.js';\nimport baseSortBy from './_baseSortBy.js';\nimport baseUnary from './_baseUnary.js';\nimport compareMultiple from './_compareMultiple.js';\nimport identity from './identity.js';\nimport isArray from './isArray.js';\n\n/**\n * The base implementation of `_.orderBy` without param guards.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n * @param {string[]} orders The sort orders of `iteratees`.\n * @returns {Array} Returns the new sorted array.\n */\nfunction baseOrderBy(collection, iteratees, orders) {\n  if (iteratees.length) {\n    iteratees = arrayMap(iteratees, function(iteratee) {\n      if (isArray(iteratee)) {\n        return function(value) {\n          return baseGet(value, iteratee.length === 1 ? iteratee[0] : iteratee);\n        }\n      }\n      return iteratee;\n    });\n  } else {\n    iteratees = [identity];\n  }\n\n  var index = -1;\n  iteratees = arrayMap(iteratees, baseUnary(baseIteratee));\n\n  var result = baseMap(collection, function(value, key, collection) {\n    var criteria = arrayMap(iteratees, function(iteratee) {\n      return iteratee(value);\n    });\n    return { 'criteria': criteria, 'index': ++index, 'value': value };\n  });\n\n  return baseSortBy(result, function(object, other) {\n    return compareMultiple(object, other, orders);\n  });\n}\n\nexport default baseOrderBy;\n","import basePickBy from './_basePickBy.js';\nimport hasIn from './hasIn.js';\n\n/**\n * The base implementation of `_.pick` without support for individual\n * property identifiers.\n *\n * @private\n * @param {Object} object The source object.\n * @param {string[]} paths The property paths to pick.\n * @returns {Object} Returns the new object.\n */\nfunction basePick(object, paths) {\n  return basePickBy(object, paths, function(value, path) {\n    return hasIn(object, path);\n  });\n}\n\nexport default basePick;\n","import basePick from './_basePick.js';\nimport flatRest from './_flatRest.js';\n\n/**\n * Creates an object composed of the picked `object` properties.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The source object.\n * @param {...(string|string[])} [paths] The property paths to pick.\n * @returns {Object} Returns the new object.\n * @example\n *\n * var object = { 'a': 1, 'b': '2', 'c': 3 };\n *\n * _.pick(object, ['a', 'c']);\n * // => { 'a': 1, 'c': 3 }\n */\nvar pick = flatRest(function(object, paths) {\n  return object == null ? {} : basePick(object, paths);\n});\n\nexport default pick;\n","/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeCeil = Math.ceil,\n    nativeMax = Math.max;\n\n/**\n * The base implementation of `_.range` and `_.rangeRight` which doesn't\n * coerce arguments.\n *\n * @private\n * @param {number} start The start of the range.\n * @param {number} end The end of the range.\n * @param {number} step The value to increment or decrement by.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Array} Returns the range of numbers.\n */\nfunction baseRange(start, end, step, fromRight) {\n  var index = -1,\n      length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),\n      result = Array(length);\n\n  while (length--) {\n    result[fromRight ? length : ++index] = start;\n    start += step;\n  }\n  return result;\n}\n\nexport default baseRange;\n","import baseRange from './_baseRange.js';\nimport isIterateeCall from './_isIterateeCall.js';\nimport toFinite from './toFinite.js';\n\n/**\n * Creates a `_.range` or `_.rangeRight` function.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new range function.\n */\nfunction createRange(fromRight) {\n  return function(start, end, step) {\n    if (step && typeof step != 'number' && isIterateeCall(start, end, step)) {\n      end = step = undefined;\n    }\n    // Ensure the sign of `-0` is preserved.\n    start = toFinite(start);\n    if (end === undefined) {\n      end = start;\n      start = 0;\n    } else {\n      end = toFinite(end);\n    }\n    step = step === undefined ? (start < end ? 1 : -1) : toFinite(step);\n    return baseRange(start, end, step, fromRight);\n  };\n}\n\nexport default createRange;\n","import createRange from './_createRange.js';\n\n/**\n * Creates an array of numbers (positive and/or negative) progressing from\n * `start` up to, but not including, `end`. A step of `-1` is used if a negative\n * `start` is specified without an `end` or `step`. If `end` is not specified,\n * it's set to `start` with `start` then set to `0`.\n *\n * **Note:** JavaScript follows the IEEE-754 standard for resolving\n * floating-point values which can produce unexpected results.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {number} [start=0] The start of the range.\n * @param {number} end The end of the range.\n * @param {number} [step=1] The value to increment or decrement by.\n * @returns {Array} Returns the range of numbers.\n * @see _.inRange, _.rangeRight\n * @example\n *\n * _.range(4);\n * // => [0, 1, 2, 3]\n *\n * _.range(-4);\n * // => [0, -1, -2, -3]\n *\n * _.range(1, 5);\n * // => [1, 2, 3, 4]\n *\n * _.range(0, 20, 5);\n * // => [0, 5, 10, 15]\n *\n * _.range(0, -4, -1);\n * // => [0, -1, -2, -3]\n *\n * _.range(1, 4, 0);\n * // => [1, 1, 1]\n *\n * _.range(0);\n * // => []\n */\nvar range = createRange();\n\nexport default range;\n","/**\n * The base implementation of `_.reduce` and `_.reduceRight`, without support\n * for iteratee shorthands, which iterates over `collection` using `eachFunc`.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {*} accumulator The initial value.\n * @param {boolean} initAccum Specify using the first or last element of\n *  `collection` as the initial value.\n * @param {Function} eachFunc The function to iterate over `collection`.\n * @returns {*} Returns the accumulated value.\n */\nfunction baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {\n  eachFunc(collection, function(value, index, collection) {\n    accumulator = initAccum\n      ? (initAccum = false, value)\n      : iteratee(accumulator, value, index, collection);\n  });\n  return accumulator;\n}\n\nexport default baseReduce;\n","import arrayReduce from './_arrayReduce.js';\nimport baseEach from './_baseEach.js';\nimport baseIteratee from './_baseIteratee.js';\nimport baseReduce from './_baseReduce.js';\nimport isArray from './isArray.js';\n\n/**\n * Reduces `collection` to a value which is the accumulated result of running\n * each element in `collection` thru `iteratee`, where each successive\n * invocation is supplied the return value of the previous. If `accumulator`\n * is not given, the first element of `collection` is used as the initial\n * value. The iteratee is invoked with four arguments:\n * (accumulator, value, index|key, collection).\n *\n * Many lodash methods are guarded to work as iteratees for methods like\n * `_.reduce`, `_.reduceRight`, and `_.transform`.\n *\n * The guarded methods are:\n * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `orderBy`,\n * and `sortBy`\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @param {*} [accumulator] The initial value.\n * @returns {*} Returns the accumulated value.\n * @see _.reduceRight\n * @example\n *\n * _.reduce([1, 2], function(sum, n) {\n *   return sum + n;\n * }, 0);\n * // => 3\n *\n * _.reduce({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n *   (result[value] || (result[value] = [])).push(key);\n *   return result;\n * }, {});\n * // => { '1': ['a', 'c'], '2': ['b'] } (iteration order is not guaranteed)\n */\nfunction reduce(collection, iteratee, accumulator) {\n  var func = isArray(collection) ? arrayReduce : baseReduce,\n      initAccum = arguments.length < 3;\n\n  return func(collection, baseIteratee(iteratee, 4), accumulator, initAccum, baseEach);\n}\n\nexport default reduce;\n","import baseFlatten from './_baseFlatten.js';\nimport baseOrderBy from './_baseOrderBy.js';\nimport baseRest from './_baseRest.js';\nimport isIterateeCall from './_isIterateeCall.js';\n\n/**\n * Creates an array of elements, sorted in ascending order by the results of\n * running each element in a collection thru each iteratee. This method\n * performs a stable sort, that is, it preserves the original sort order of\n * equal elements. The iteratees are invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {...(Function|Function[])} [iteratees=[_.identity]]\n *  The iteratees to sort by.\n * @returns {Array} Returns the new sorted array.\n * @example\n *\n * var users = [\n *   { 'user': 'fred',   'age': 48 },\n *   { 'user': 'barney', 'age': 36 },\n *   { 'user': 'fred',   'age': 30 },\n *   { 'user': 'barney', 'age': 34 }\n * ];\n *\n * _.sortBy(users, [function(o) { return o.user; }]);\n * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 30]]\n *\n * _.sortBy(users, ['user', 'age']);\n * // => objects for [['barney', 34], ['barney', 36], ['fred', 30], ['fred', 48]]\n */\nvar sortBy = baseRest(function(collection, iteratees) {\n  if (collection == null) {\n    return [];\n  }\n  var length = iteratees.length;\n  if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {\n    iteratees = [];\n  } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {\n    iteratees = [iteratees[0]];\n  }\n  return baseOrderBy(collection, baseFlatten(iteratees, 1), []);\n});\n\nexport default sortBy;\n","import Set from './_Set.js';\nimport noop from './noop.js';\nimport setToArray from './_setToArray.js';\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/**\n * Creates a set object of `values`.\n *\n * @private\n * @param {Array} values The values to add to the set.\n * @returns {Object} Returns the new set.\n */\nvar createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {\n  return new Set(values);\n};\n\nexport default createSet;\n","import SetCache from './_SetCache.js';\nimport arrayIncludes from './_arrayIncludes.js';\nimport arrayIncludesWith from './_arrayIncludesWith.js';\nimport cacheHas from './_cacheHas.js';\nimport createSet from './_createSet.js';\nimport setToArray from './_setToArray.js';\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/**\n * The base implementation of `_.uniqBy` without support for iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Function} [iteratee] The iteratee invoked per element.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns the new duplicate free array.\n */\nfunction baseUniq(array, iteratee, comparator) {\n  var index = -1,\n      includes = arrayIncludes,\n      length = array.length,\n      isCommon = true,\n      result = [],\n      seen = result;\n\n  if (comparator) {\n    isCommon = false;\n    includes = arrayIncludesWith;\n  }\n  else if (length >= LARGE_ARRAY_SIZE) {\n    var set = iteratee ? null : createSet(array);\n    if (set) {\n      return setToArray(set);\n    }\n    isCommon = false;\n    includes = cacheHas;\n    seen = new SetCache;\n  }\n  else {\n    seen = iteratee ? [] : result;\n  }\n  outer:\n  while (++index < length) {\n    var value = array[index],\n        computed = iteratee ? iteratee(value) : value;\n\n    value = (comparator || value !== 0) ? value : 0;\n    if (isCommon && computed === computed) {\n      var seenIndex = seen.length;\n      while (seenIndex--) {\n        if (seen[seenIndex] === computed) {\n          continue outer;\n        }\n      }\n      if (iteratee) {\n        seen.push(computed);\n      }\n      result.push(value);\n    }\n    else if (!includes(seen, computed, comparator)) {\n      if (seen !== result) {\n        seen.push(computed);\n      }\n      result.push(value);\n    }\n  }\n  return result;\n}\n\nexport default baseUniq;\n","import baseFlatten from './_baseFlatten.js';\nimport baseRest from './_baseRest.js';\nimport baseUniq from './_baseUniq.js';\nimport isArrayLikeObject from './isArrayLikeObject.js';\n\n/**\n * Creates an array of unique values, in order, from all given arrays using\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {...Array} [arrays] The arrays to inspect.\n * @returns {Array} Returns the new array of combined values.\n * @example\n *\n * _.union([2], [1, 2]);\n * // => [2, 1]\n */\nvar union = baseRest(function(arrays) {\n  return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true));\n});\n\nexport default union;\n","import toString from './toString.js';\n\n/** Used to generate unique IDs. */\nvar idCounter = 0;\n\n/**\n * Generates a unique ID. If `prefix` is given, the ID is appended to it.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {string} [prefix=''] The value to prefix the ID with.\n * @returns {string} Returns the unique ID.\n * @example\n *\n * _.uniqueId('contact_');\n * // => 'contact_104'\n *\n * _.uniqueId();\n * // => '105'\n */\nfunction uniqueId(prefix) {\n  var id = ++idCounter;\n  return toString(prefix) + id;\n}\n\nexport default uniqueId;\n","/**\n * This base implementation of `_.zipObject` which assigns values using `assignFunc`.\n *\n * @private\n * @param {Array} props The property identifiers.\n * @param {Array} values The property values.\n * @param {Function} assignFunc The function to assign values.\n * @returns {Object} Returns the new object.\n */\nfunction baseZipObject(props, values, assignFunc) {\n  var index = -1,\n      length = props.length,\n      valsLength = values.length,\n      result = {};\n\n  while (++index < length) {\n    var value = index < valsLength ? values[index] : undefined;\n    assignFunc(result, props[index], value);\n  }\n  return result;\n}\n\nexport default baseZipObject;\n","import assignValue from './_assignValue.js';\nimport baseZipObject from './_baseZipObject.js';\n\n/**\n * This method is like `_.fromPairs` except that it accepts two arrays,\n * one of property identifiers and one of corresponding values.\n *\n * @static\n * @memberOf _\n * @since 0.4.0\n * @category Array\n * @param {Array} [props=[]] The property identifiers.\n * @param {Array} [values=[]] The property values.\n * @returns {Object} Returns the new object.\n * @example\n *\n * _.zipObject(['a', 'b'], [1, 2]);\n * // => { 'a': 1, 'b': 2 }\n */\nfunction zipObject(props, values) {\n  return baseZipObject(props || [], values || [], assignValue);\n}\n\nexport default zipObject;\n","import * as _ from 'lodash-es';\n\nvar DEFAULT_EDGE_NAME = '\\x00';\nvar GRAPH_NODE = '\\x00';\nvar EDGE_KEY_DELIM = '\\x01';\n\n// Implementation notes:\n//\n//  * Node id query functions should return string ids for the nodes\n//  * Edge id query functions should return an \"edgeObj\", edge object, that is\n//    composed of enough information to uniquely identify an edge: {v, w, name}.\n//  * Internally we use an \"edgeId\", a stringified form of the edgeObj, to\n//    reference edges. This is because we need a performant way to look these\n//    edges up and, object properties, which have string keys, are the closest\n//    we're going to get to a performant hashtable in JavaScript.\n\n// Implementation notes:\n//\n//  * Node id query functions should return string ids for the nodes\n//  * Edge id query functions should return an \"edgeObj\", edge object, that is\n//    composed of enough information to uniquely identify an edge: {v, w, name}.\n//  * Internally we use an \"edgeId\", a stringified form of the edgeObj, to\n//    reference edges. This is because we need a performant way to look these\n//    edges up and, object properties, which have string keys, are the closest\n//    we're going to get to a performant hashtable in JavaScript.\nexport class Graph {\n  constructor(opts = {}) {\n    this._isDirected = _.has(opts, 'directed') ? opts.directed : true;\n    this._isMultigraph = _.has(opts, 'multigraph') ? opts.multigraph : false;\n    this._isCompound = _.has(opts, 'compound') ? opts.compound : false;\n\n    // Label for the graph itself\n    this._label = undefined;\n\n    // Defaults to be set when creating a new node\n    this._defaultNodeLabelFn = _.constant(undefined);\n\n    // Defaults to be set when creating a new edge\n    this._defaultEdgeLabelFn = _.constant(undefined);\n\n    // v -> label\n    this._nodes = {};\n\n    if (this._isCompound) {\n      // v -> parent\n      this._parent = {};\n\n      // v -> children\n      this._children = {};\n      this._children[GRAPH_NODE] = {};\n    }\n\n    // v -> edgeObj\n    this._in = {};\n\n    // u -> v -> Number\n    this._preds = {};\n\n    // v -> edgeObj\n    this._out = {};\n\n    // v -> w -> Number\n    this._sucs = {};\n\n    // e -> edgeObj\n    this._edgeObjs = {};\n\n    // e -> label\n    this._edgeLabels = {};\n  }\n  /* === Graph functions ========= */\n  isDirected() {\n    return this._isDirected;\n  }\n  isMultigraph() {\n    return this._isMultigraph;\n  }\n  isCompound() {\n    return this._isCompound;\n  }\n  setGraph(label) {\n    this._label = label;\n    return this;\n  }\n  graph() {\n    return this._label;\n  }\n  /* === Node functions ========== */\n  setDefaultNodeLabel(newDefault) {\n    if (!_.isFunction(newDefault)) {\n      newDefault = _.constant(newDefault);\n    }\n    this._defaultNodeLabelFn = newDefault;\n    return this;\n  }\n  nodeCount() {\n    return this._nodeCount;\n  }\n  nodes() {\n    return _.keys(this._nodes);\n  }\n  sources() {\n    var self = this;\n    return _.filter(this.nodes(), function (v) {\n      return _.isEmpty(self._in[v]);\n    });\n  }\n  sinks() {\n    var self = this;\n    return _.filter(this.nodes(), function (v) {\n      return _.isEmpty(self._out[v]);\n    });\n  }\n  setNodes(vs, value) {\n    var args = arguments;\n    var self = this;\n    _.each(vs, function (v) {\n      if (args.length > 1) {\n        self.setNode(v, value);\n      } else {\n        self.setNode(v);\n      }\n    });\n    return this;\n  }\n  setNode(v, value) {\n    if (_.has(this._nodes, v)) {\n      if (arguments.length > 1) {\n        this._nodes[v] = value;\n      }\n      return this;\n    }\n\n    // @ts-expect-error\n    this._nodes[v] = arguments.length > 1 ? value : this._defaultNodeLabelFn(v);\n    if (this._isCompound) {\n      this._parent[v] = GRAPH_NODE;\n      this._children[v] = {};\n      this._children[GRAPH_NODE][v] = true;\n    }\n    this._in[v] = {};\n    this._preds[v] = {};\n    this._out[v] = {};\n    this._sucs[v] = {};\n    ++this._nodeCount;\n    return this;\n  }\n  node(v) {\n    return this._nodes[v];\n  }\n  hasNode(v) {\n    return _.has(this._nodes, v);\n  }\n  removeNode(v) {\n    var self = this;\n    if (_.has(this._nodes, v)) {\n      var removeEdge = function (e) {\n        self.removeEdge(self._edgeObjs[e]);\n      };\n      delete this._nodes[v];\n      if (this._isCompound) {\n        this._removeFromParentsChildList(v);\n        delete this._parent[v];\n        _.each(this.children(v), function (child) {\n          self.setParent(child);\n        });\n        delete this._children[v];\n      }\n      _.each(_.keys(this._in[v]), removeEdge);\n      delete this._in[v];\n      delete this._preds[v];\n      _.each(_.keys(this._out[v]), removeEdge);\n      delete this._out[v];\n      delete this._sucs[v];\n      --this._nodeCount;\n    }\n    return this;\n  }\n  setParent(v, parent) {\n    if (!this._isCompound) {\n      throw new Error('Cannot set parent in a non-compound graph');\n    }\n\n    if (_.isUndefined(parent)) {\n      parent = GRAPH_NODE;\n    } else {\n      // Coerce parent to string\n      parent += '';\n      for (var ancestor = parent; !_.isUndefined(ancestor); ancestor = this.parent(ancestor)) {\n        if (ancestor === v) {\n          throw new Error('Setting ' + parent + ' as parent of ' + v + ' would create a cycle');\n        }\n      }\n\n      this.setNode(parent);\n    }\n\n    this.setNode(v);\n    this._removeFromParentsChildList(v);\n    this._parent[v] = parent;\n    this._children[parent][v] = true;\n    return this;\n  }\n  _removeFromParentsChildList(v) {\n    delete this._children[this._parent[v]][v];\n  }\n  parent(v) {\n    if (this._isCompound) {\n      var parent = this._parent[v];\n      if (parent !== GRAPH_NODE) {\n        return parent;\n      }\n    }\n  }\n  children(v) {\n    if (_.isUndefined(v)) {\n      v = GRAPH_NODE;\n    }\n\n    if (this._isCompound) {\n      var children = this._children[v];\n      if (children) {\n        return _.keys(children);\n      }\n    } else if (v === GRAPH_NODE) {\n      return this.nodes();\n    } else if (this.hasNode(v)) {\n      return [];\n    }\n  }\n  predecessors(v) {\n    var predsV = this._preds[v];\n    if (predsV) {\n      return _.keys(predsV);\n    }\n  }\n  successors(v) {\n    var sucsV = this._sucs[v];\n    if (sucsV) {\n      return _.keys(sucsV);\n    }\n  }\n  neighbors(v) {\n    var preds = this.predecessors(v);\n    if (preds) {\n      return _.union(preds, this.successors(v));\n    }\n  }\n  isLeaf(v) {\n    var neighbors;\n    if (this.isDirected()) {\n      neighbors = this.successors(v);\n    } else {\n      neighbors = this.neighbors(v);\n    }\n    return neighbors.length === 0;\n  }\n  filterNodes(filter) {\n    // @ts-expect-error\n    var copy = new this.constructor({\n      directed: this._isDirected,\n      multigraph: this._isMultigraph,\n      compound: this._isCompound,\n    });\n\n    copy.setGraph(this.graph());\n\n    var self = this;\n    _.each(this._nodes, function (value, v) {\n      if (filter(v)) {\n        copy.setNode(v, value);\n      }\n    });\n\n    _.each(this._edgeObjs, function (e) {\n      // @ts-expect-error\n      if (copy.hasNode(e.v) && copy.hasNode(e.w)) {\n        copy.setEdge(e, self.edge(e));\n      }\n    });\n\n    var parents = {};\n    function findParent(v) {\n      var parent = self.parent(v);\n      if (parent === undefined || copy.hasNode(parent)) {\n        parents[v] = parent;\n        return parent;\n      } else if (parent in parents) {\n        return parents[parent];\n      } else {\n        return findParent(parent);\n      }\n    }\n\n    if (this._isCompound) {\n      _.each(copy.nodes(), function (v) {\n        copy.setParent(v, findParent(v));\n      });\n    }\n\n    return copy;\n  }\n  /* === Edge functions ========== */\n  setDefaultEdgeLabel(newDefault) {\n    if (!_.isFunction(newDefault)) {\n      newDefault = _.constant(newDefault);\n    }\n    this._defaultEdgeLabelFn = newDefault;\n    return this;\n  }\n  edgeCount() {\n    return this._edgeCount;\n  }\n  edges() {\n    return _.values(this._edgeObjs);\n  }\n  setPath(vs, value) {\n    var self = this;\n    var args = arguments;\n    _.reduce(vs, function (v, w) {\n      if (args.length > 1) {\n        self.setEdge(v, w, value);\n      } else {\n        self.setEdge(v, w);\n      }\n      return w;\n    });\n    return this;\n  }\n  /*\n   * setEdge(v, w, [value, [name]])\n   * setEdge({ v, w, [name] }, [value])\n   */\n  setEdge() {\n    var v, w, name, value;\n    var valueSpecified = false;\n    var arg0 = arguments[0];\n\n    if (typeof arg0 === 'object' && arg0 !== null && 'v' in arg0) {\n      v = arg0.v;\n      w = arg0.w;\n      name = arg0.name;\n      if (arguments.length === 2) {\n        value = arguments[1];\n        valueSpecified = true;\n      }\n    } else {\n      v = arg0;\n      w = arguments[1];\n      name = arguments[3];\n      if (arguments.length > 2) {\n        value = arguments[2];\n        valueSpecified = true;\n      }\n    }\n\n    v = '' + v;\n    w = '' + w;\n    if (!_.isUndefined(name)) {\n      name = '' + name;\n    }\n\n    var e = edgeArgsToId(this._isDirected, v, w, name);\n    if (_.has(this._edgeLabels, e)) {\n      if (valueSpecified) {\n        this._edgeLabels[e] = value;\n      }\n      return this;\n    }\n\n    if (!_.isUndefined(name) && !this._isMultigraph) {\n      throw new Error('Cannot set a named edge when isMultigraph = false');\n    }\n\n    // It didn't exist, so we need to create it.\n    // First ensure the nodes exist.\n    this.setNode(v);\n    this.setNode(w);\n\n    // @ts-expect-error\n    this._edgeLabels[e] = valueSpecified ? value : this._defaultEdgeLabelFn(v, w, name);\n\n    var edgeObj = edgeArgsToObj(this._isDirected, v, w, name);\n    // Ensure we add undirected edges in a consistent way.\n    v = edgeObj.v;\n    w = edgeObj.w;\n\n    Object.freeze(edgeObj);\n    this._edgeObjs[e] = edgeObj;\n    incrementOrInitEntry(this._preds[w], v);\n    incrementOrInitEntry(this._sucs[v], w);\n    this._in[w][e] = edgeObj;\n    this._out[v][e] = edgeObj;\n    this._edgeCount++;\n    return this;\n  }\n  edge(v, w, name) {\n    var e =\n      arguments.length === 1\n        ? edgeObjToId(this._isDirected, arguments[0])\n        : edgeArgsToId(this._isDirected, v, w, name);\n    return this._edgeLabels[e];\n  }\n  hasEdge(v, w, name) {\n    var e =\n      arguments.length === 1\n        ? edgeObjToId(this._isDirected, arguments[0])\n        : edgeArgsToId(this._isDirected, v, w, name);\n    return _.has(this._edgeLabels, e);\n  }\n  removeEdge(v, w, name) {\n    var e =\n      arguments.length === 1\n        ? edgeObjToId(this._isDirected, arguments[0])\n        : edgeArgsToId(this._isDirected, v, w, name);\n    var edge = this._edgeObjs[e];\n    if (edge) {\n      v = edge.v;\n      w = edge.w;\n      delete this._edgeLabels[e];\n      delete this._edgeObjs[e];\n      decrementOrRemoveEntry(this._preds[w], v);\n      decrementOrRemoveEntry(this._sucs[v], w);\n      delete this._in[w][e];\n      delete this._out[v][e];\n      this._edgeCount--;\n    }\n    return this;\n  }\n  inEdges(v, u) {\n    var inV = this._in[v];\n    if (inV) {\n      var edges = _.values(inV);\n      if (!u) {\n        return edges;\n      }\n      return _.filter(edges, function (edge) {\n        return edge.v === u;\n      });\n    }\n  }\n  outEdges(v, w) {\n    var outV = this._out[v];\n    if (outV) {\n      var edges = _.values(outV);\n      if (!w) {\n        return edges;\n      }\n      return _.filter(edges, function (edge) {\n        return edge.w === w;\n      });\n    }\n  }\n  nodeEdges(v, w) {\n    var inEdges = this.inEdges(v, w);\n    if (inEdges) {\n      return inEdges.concat(this.outEdges(v, w));\n    }\n  }\n}\n\n/* Number of nodes in the graph. Should only be changed by the implementation. */\nGraph.prototype._nodeCount = 0;\n\n/* Number of edges in the graph. Should only be changed by the implementation. */\nGraph.prototype._edgeCount = 0;\n\nfunction incrementOrInitEntry(map, k) {\n  if (map[k]) {\n    map[k]++;\n  } else {\n    map[k] = 1;\n  }\n}\n\nfunction decrementOrRemoveEntry(map, k) {\n  if (!--map[k]) {\n    delete map[k];\n  }\n}\n\nfunction edgeArgsToId(isDirected, v_, w_, name) {\n  var v = '' + v_;\n  var w = '' + w_;\n  if (!isDirected && v > w) {\n    var tmp = v;\n    v = w;\n    w = tmp;\n  }\n  return v + EDGE_KEY_DELIM + w + EDGE_KEY_DELIM + (_.isUndefined(name) ? DEFAULT_EDGE_NAME : name);\n}\n\nfunction edgeArgsToObj(isDirected, v_, w_, name) {\n  var v = '' + v_;\n  var w = '' + w_;\n  if (!isDirected && v > w) {\n    var tmp = v;\n    v = w;\n    w = tmp;\n  }\n  var edgeObj = { v: v, w: w };\n  if (name) {\n    edgeObj.name = name;\n  }\n  return edgeObj;\n}\n\nfunction edgeObjToId(isDirected, edgeObj) {\n  return edgeArgsToId(isDirected, edgeObj.v, edgeObj.w, edgeObj.name);\n}\n","/*\n * Simple doubly linked list implementation derived from Cormen, et al.,\n * \"Introduction to Algorithms\".\n */\n\nexport { List };\n\nclass List {\n  constructor() {\n    var sentinel = {};\n    sentinel._next = sentinel._prev = sentinel;\n    this._sentinel = sentinel;\n  }\n  dequeue() {\n    var sentinel = this._sentinel;\n    var entry = sentinel._prev;\n    if (entry !== sentinel) {\n      unlink(entry);\n      return entry;\n    }\n  }\n  enqueue(entry) {\n    var sentinel = this._sentinel;\n    if (entry._prev && entry._next) {\n      unlink(entry);\n    }\n    entry._next = sentinel._next;\n    sentinel._next._prev = entry;\n    sentinel._next = entry;\n    entry._prev = sentinel;\n  }\n  toString() {\n    var strs = [];\n    var sentinel = this._sentinel;\n    var curr = sentinel._prev;\n    while (curr !== sentinel) {\n      strs.push(JSON.stringify(curr, filterOutLinks));\n      curr = curr._prev;\n    }\n    return '[' + strs.join(', ') + ']';\n  }\n}\n\nfunction unlink(entry) {\n  entry._prev._next = entry._next;\n  entry._next._prev = entry._prev;\n  delete entry._next;\n  delete entry._prev;\n}\n\nfunction filterOutLinks(k, v) {\n  if (k !== '_next' && k !== '_prev') {\n    return v;\n  }\n}\n","import * as _ from 'lodash-es';\nimport { Graph } from '../graphlib/index.js';\nimport { List } from './data/list.js';\n\n/*\n * A greedy heuristic for finding a feedback arc set for a graph. A feedback\n * arc set is a set of edges that can be removed to make a graph acyclic.\n * The algorithm comes from: P. Eades, X. Lin, and W. F. Smyth, \"A fast and\n * effective heuristic for the feedback arc set problem.\" This implementation\n * adjusts that from the paper to allow for weighted edges.\n */\nexport { greedyFAS };\n\nvar DEFAULT_WEIGHT_FN = _.constant(1);\n\nfunction greedyFAS(g, weightFn) {\n  if (g.nodeCount() <= 1) {\n    return [];\n  }\n  var state = buildState(g, weightFn || DEFAULT_WEIGHT_FN);\n  var results = doGreedyFAS(state.graph, state.buckets, state.zeroIdx);\n\n  // Expand multi-edges\n  return _.flatten(\n    _.map(results, function (e) {\n      return g.outEdges(e.v, e.w);\n    })\n  );\n}\n\nfunction doGreedyFAS(g, buckets, zeroIdx) {\n  var results = [];\n  var sources = buckets[buckets.length - 1];\n  var sinks = buckets[0];\n\n  var entry;\n  while (g.nodeCount()) {\n    while ((entry = sinks.dequeue())) {\n      removeNode(g, buckets, zeroIdx, entry);\n    }\n    while ((entry = sources.dequeue())) {\n      removeNode(g, buckets, zeroIdx, entry);\n    }\n    if (g.nodeCount()) {\n      for (var i = buckets.length - 2; i > 0; --i) {\n        entry = buckets[i].dequeue();\n        if (entry) {\n          results = results.concat(removeNode(g, buckets, zeroIdx, entry, true));\n          break;\n        }\n      }\n    }\n  }\n\n  return results;\n}\n\nfunction removeNode(g, buckets, zeroIdx, entry, collectPredecessors) {\n  var results = collectPredecessors ? [] : undefined;\n\n  _.forEach(g.inEdges(entry.v), function (edge) {\n    var weight = g.edge(edge);\n    var uEntry = g.node(edge.v);\n\n    if (collectPredecessors) {\n      results.push({ v: edge.v, w: edge.w });\n    }\n\n    uEntry.out -= weight;\n    assignBucket(buckets, zeroIdx, uEntry);\n  });\n\n  _.forEach(g.outEdges(entry.v), function (edge) {\n    var weight = g.edge(edge);\n    var w = edge.w;\n    var wEntry = g.node(w);\n    wEntry['in'] -= weight;\n    assignBucket(buckets, zeroIdx, wEntry);\n  });\n\n  g.removeNode(entry.v);\n\n  return results;\n}\n\nfunction buildState(g, weightFn) {\n  var fasGraph = new Graph();\n  var maxIn = 0;\n  var maxOut = 0;\n\n  _.forEach(g.nodes(), function (v) {\n    fasGraph.setNode(v, { v: v, in: 0, out: 0 });\n  });\n\n  // Aggregate weights on nodes, but also sum the weights across multi-edges\n  // into a single edge for the fasGraph.\n  _.forEach(g.edges(), function (e) {\n    var prevWeight = fasGraph.edge(e.v, e.w) || 0;\n    var weight = weightFn(e);\n    var edgeWeight = prevWeight + weight;\n    fasGraph.setEdge(e.v, e.w, edgeWeight);\n    maxOut = Math.max(maxOut, (fasGraph.node(e.v).out += weight));\n    maxIn = Math.max(maxIn, (fasGraph.node(e.w)['in'] += weight));\n  });\n\n  var buckets = _.range(maxOut + maxIn + 3).map(function () {\n    return new List();\n  });\n  var zeroIdx = maxIn + 1;\n\n  _.forEach(fasGraph.nodes(), function (v) {\n    assignBucket(buckets, zeroIdx, fasGraph.node(v));\n  });\n\n  return { graph: fasGraph, buckets: buckets, zeroIdx: zeroIdx };\n}\n\nfunction assignBucket(buckets, zeroIdx, entry) {\n  if (!entry.out) {\n    buckets[0].enqueue(entry);\n  } else if (!entry['in']) {\n    buckets[buckets.length - 1].enqueue(entry);\n  } else {\n    buckets[entry.out - entry['in'] + zeroIdx].enqueue(entry);\n  }\n}\n","import * as _ from 'lodash-es';\nimport { greedyFAS } from './greedy-fas.js';\n\nexport { run, undo };\n\nfunction run(g) {\n  var fas = g.graph().acyclicer === 'greedy' ? greedyFAS(g, weightFn(g)) : dfsFAS(g);\n  _.forEach(fas, function (e) {\n    var label = g.edge(e);\n    g.removeEdge(e);\n    label.forwardName = e.name;\n    label.reversed = true;\n    g.setEdge(e.w, e.v, label, _.uniqueId('rev'));\n  });\n\n  function weightFn(g) {\n    return function (e) {\n      return g.edge(e).weight;\n    };\n  }\n}\n\nfunction dfsFAS(g) {\n  var fas = [];\n  var stack = {};\n  var visited = {};\n\n  function dfs(v) {\n    if (_.has(visited, v)) {\n      return;\n    }\n    visited[v] = true;\n    stack[v] = true;\n    _.forEach(g.outEdges(v), function (e) {\n      if (_.has(stack, e.w)) {\n        fas.push(e);\n      } else {\n        dfs(e.w);\n      }\n    });\n    delete stack[v];\n  }\n\n  _.forEach(g.nodes(), dfs);\n  return fas;\n}\n\nfunction undo(g) {\n  _.forEach(g.edges(), function (e) {\n    var label = g.edge(e);\n    if (label.reversed) {\n      g.removeEdge(e);\n\n      var forwardName = label.forwardName;\n      delete label.reversed;\n      delete label.forwardName;\n      g.setEdge(e.w, e.v, label, forwardName);\n    }\n  });\n}\n","import * as _ from 'lodash-es';\nimport { Graph } from '../graphlib/index.js';\n\nexport {\n  addDummyNode,\n  simplify,\n  asNonCompoundGraph,\n  successorWeights,\n  predecessorWeights,\n  intersectRect,\n  buildLayerMatrix,\n  normalizeRanks,\n  removeEmptyRanks,\n  addBorderNode,\n  maxRank,\n  partition,\n  time,\n  notime,\n};\n\n/*\n * Adds a dummy node to the graph and return v.\n */\nfunction addDummyNode(g, type, attrs, name) {\n  var v;\n  do {\n    v = _.uniqueId(name);\n  } while (g.hasNode(v));\n\n  attrs.dummy = type;\n  g.setNode(v, attrs);\n  return v;\n}\n\n/*\n * Returns a new graph with only simple edges. Handles aggregation of data\n * associated with multi-edges.\n */\nfunction simplify(g) {\n  var simplified = new Graph().setGraph(g.graph());\n  _.forEach(g.nodes(), function (v) {\n    simplified.setNode(v, g.node(v));\n  });\n  _.forEach(g.edges(), function (e) {\n    var simpleLabel = simplified.edge(e.v, e.w) || { weight: 0, minlen: 1 };\n    var label = g.edge(e);\n    simplified.setEdge(e.v, e.w, {\n      weight: simpleLabel.weight + label.weight,\n      minlen: Math.max(simpleLabel.minlen, label.minlen),\n    });\n  });\n  return simplified;\n}\n\nfunction asNonCompoundGraph(g) {\n  var simplified = new Graph({ multigraph: g.isMultigraph() }).setGraph(g.graph());\n  _.forEach(g.nodes(), function (v) {\n    if (!g.children(v).length) {\n      simplified.setNode(v, g.node(v));\n    }\n  });\n  _.forEach(g.edges(), function (e) {\n    simplified.setEdge(e, g.edge(e));\n  });\n  return simplified;\n}\n\nfunction successorWeights(g) {\n  var weightMap = _.map(g.nodes(), function (v) {\n    var sucs = {};\n    _.forEach(g.outEdges(v), function (e) {\n      sucs[e.w] = (sucs[e.w] || 0) + g.edge(e).weight;\n    });\n    return sucs;\n  });\n  return _.zipObject(g.nodes(), weightMap);\n}\n\nfunction predecessorWeights(g) {\n  var weightMap = _.map(g.nodes(), function (v) {\n    var preds = {};\n    _.forEach(g.inEdges(v), function (e) {\n      preds[e.v] = (preds[e.v] || 0) + g.edge(e).weight;\n    });\n    return preds;\n  });\n  return _.zipObject(g.nodes(), weightMap);\n}\n\n/*\n * Finds where a line starting at point ({x, y}) would intersect a rectangle\n * ({x, y, width, height}) if it were pointing at the rectangle's center.\n */\nfunction intersectRect(rect, point) {\n  var x = rect.x;\n  var y = rect.y;\n\n  // Rectangle intersection algorithm from:\n  // http://math.stackexchange.com/questions/108113/find-edge-between-two-boxes\n  var dx = point.x - x;\n  var dy = point.y - y;\n  var w = rect.width / 2;\n  var h = rect.height / 2;\n\n  if (!dx && !dy) {\n    throw new Error('Not possible to find intersection inside of the rectangle');\n  }\n\n  var sx, sy;\n  if (Math.abs(dy) * w > Math.abs(dx) * h) {\n    // Intersection is top or bottom of rect.\n    if (dy < 0) {\n      h = -h;\n    }\n    sx = (h * dx) / dy;\n    sy = h;\n  } else {\n    // Intersection is left or right of rect.\n    if (dx < 0) {\n      w = -w;\n    }\n    sx = w;\n    sy = (w * dy) / dx;\n  }\n\n  return { x: x + sx, y: y + sy };\n}\n\n/*\n * Given a DAG with each node assigned \"rank\" and \"order\" properties, this\n * function will produce a matrix with the ids of each node.\n */\nfunction buildLayerMatrix(g) {\n  var layering = _.map(_.range(maxRank(g) + 1), function () {\n    return [];\n  });\n  _.forEach(g.nodes(), function (v) {\n    var node = g.node(v);\n    var rank = node.rank;\n    if (!_.isUndefined(rank)) {\n      layering[rank][node.order] = v;\n    }\n  });\n  return layering;\n}\n\n/*\n * Adjusts the ranks for all nodes in the graph such that all nodes v have\n * rank(v) >= 0 and at least one node w has rank(w) = 0.\n */\nfunction normalizeRanks(g) {\n  var min = _.min(\n    _.map(g.nodes(), function (v) {\n      return g.node(v).rank;\n    })\n  );\n  _.forEach(g.nodes(), function (v) {\n    var node = g.node(v);\n    if (_.has(node, 'rank')) {\n      node.rank -= min;\n    }\n  });\n}\n\nfunction removeEmptyRanks(g) {\n  // Ranks may not start at 0, so we need to offset them\n  var offset = _.min(\n    _.map(g.nodes(), function (v) {\n      return g.node(v).rank;\n    })\n  );\n\n  var layers = [];\n  _.forEach(g.nodes(), function (v) {\n    var rank = g.node(v).rank - offset;\n    if (!layers[rank]) {\n      layers[rank] = [];\n    }\n    layers[rank].push(v);\n  });\n\n  var delta = 0;\n  var nodeRankFactor = g.graph().nodeRankFactor;\n  _.forEach(layers, function (vs, i) {\n    if (_.isUndefined(vs) && i % nodeRankFactor !== 0) {\n      --delta;\n    } else if (delta) {\n      _.forEach(vs, function (v) {\n        g.node(v).rank += delta;\n      });\n    }\n  });\n}\n\nfunction addBorderNode(g, prefix, rank, order) {\n  var node = {\n    width: 0,\n    height: 0,\n  };\n  if (arguments.length >= 4) {\n    node.rank = rank;\n    node.order = order;\n  }\n  return addDummyNode(g, 'border', node, prefix);\n}\n\nfunction maxRank(g) {\n  return _.max(\n    _.map(g.nodes(), function (v) {\n      var rank = g.node(v).rank;\n      if (!_.isUndefined(rank)) {\n        return rank;\n      }\n    })\n  );\n}\n\n/*\n * Partition a collection into two groups: `lhs` and `rhs`. If the supplied\n * function returns true for an entry it goes into `lhs`. Otherwise it goes\n * into `rhs.\n */\nfunction partition(collection, fn) {\n  var result = { lhs: [], rhs: [] };\n  _.forEach(collection, function (value) {\n    if (fn(value)) {\n      result.lhs.push(value);\n    } else {\n      result.rhs.push(value);\n    }\n  });\n  return result;\n}\n\n/*\n * Returns a new function that wraps `fn` with a timer. The wrapper logs the\n * time it takes to execute the function.\n */\nfunction time(name, fn) {\n  var start = _.now();\n  try {\n    return fn();\n  } finally {\n    console.log(name + ' time: ' + (_.now() - start) + 'ms');\n  }\n}\n\nfunction notime(name, fn) {\n  return fn();\n}\n","import * as _ from 'lodash-es';\nimport * as util from './util.js';\n\nexport { addBorderSegments };\n\nfunction addBorderSegments(g) {\n  function dfs(v) {\n    var children = g.children(v);\n    var node = g.node(v);\n    if (children.length) {\n      _.forEach(children, dfs);\n    }\n\n    if (_.has(node, 'minRank')) {\n      node.borderLeft = [];\n      node.borderRight = [];\n      for (var rank = node.minRank, maxRank = node.maxRank + 1; rank < maxRank; ++rank) {\n        addBorderNode(g, 'borderLeft', '_bl', v, node, rank);\n        addBorderNode(g, 'borderRight', '_br', v, node, rank);\n      }\n    }\n  }\n\n  _.forEach(g.children(), dfs);\n}\n\nfunction addBorderNode(g, prop, prefix, sg, sgNode, rank) {\n  var label = { width: 0, height: 0, rank: rank, borderType: prop };\n  var prev = sgNode[prop][rank - 1];\n  var curr = util.addDummyNode(g, 'border', label, prefix);\n  sgNode[prop][rank] = curr;\n  g.setParent(curr, sg);\n  if (prev) {\n    g.setEdge(prev, curr, { weight: 1 });\n  }\n}\n","import * as _ from 'lodash-es';\n\nexport { adjust, undo };\n\nfunction adjust(g) {\n  var rankDir = g.graph().rankdir.toLowerCase();\n  if (rankDir === 'lr' || rankDir === 'rl') {\n    swapWidthHeight(g);\n  }\n}\n\nfunction undo(g) {\n  var rankDir = g.graph().rankdir.toLowerCase();\n  if (rankDir === 'bt' || rankDir === 'rl') {\n    reverseY(g);\n  }\n\n  if (rankDir === 'lr' || rankDir === 'rl') {\n    swapXY(g);\n    swapWidthHeight(g);\n  }\n}\n\nfunction swapWidthHeight(g) {\n  _.forEach(g.nodes(), function (v) {\n    swapWidthHeightOne(g.node(v));\n  });\n  _.forEach(g.edges(), function (e) {\n    swapWidthHeightOne(g.edge(e));\n  });\n}\n\nfunction swapWidthHeightOne(attrs) {\n  var w = attrs.width;\n  attrs.width = attrs.height;\n  attrs.height = w;\n}\n\nfunction reverseY(g) {\n  _.forEach(g.nodes(), function (v) {\n    reverseYOne(g.node(v));\n  });\n\n  _.forEach(g.edges(), function (e) {\n    var edge = g.edge(e);\n    _.forEach(edge.points, reverseYOne);\n    if (_.has(edge, 'y')) {\n      reverseYOne(edge);\n    }\n  });\n}\n\nfunction reverseYOne(attrs) {\n  attrs.y = -attrs.y;\n}\n\nfunction swapXY(g) {\n  _.forEach(g.nodes(), function (v) {\n    swapXYOne(g.node(v));\n  });\n\n  _.forEach(g.edges(), function (e) {\n    var edge = g.edge(e);\n    _.forEach(edge.points, swapXYOne);\n    if (_.has(edge, 'x')) {\n      swapXYOne(edge);\n    }\n  });\n}\n\nfunction swapXYOne(attrs) {\n  var x = attrs.x;\n  attrs.x = attrs.y;\n  attrs.y = x;\n}\n","import * as _ from 'lodash-es';\nimport * as util from './util.js';\n\nexport { run, undo };\n\n/*\n * Breaks any long edges in the graph into short segments that span 1 layer\n * each. This operation is undoable with the denormalize function.\n *\n * Pre-conditions:\n *\n *    1. The input graph is a DAG.\n *    2. Each node in the graph has a \"rank\" property.\n *\n * Post-condition:\n *\n *    1. All edges in the graph have a length of 1.\n *    2. Dummy nodes are added where edges have been split into segments.\n *    3. The graph is augmented with a \"dummyChains\" attribute which contains\n *       the first dummy in each chain of dummy nodes produced.\n */\nfunction run(g) {\n  g.graph().dummyChains = [];\n  _.forEach(g.edges(), function (edge) {\n    normalizeEdge(g, edge);\n  });\n}\n\nfunction normalizeEdge(g, e) {\n  var v = e.v;\n  var vRank = g.node(v).rank;\n  var w = e.w;\n  var wRank = g.node(w).rank;\n  var name = e.name;\n  var edgeLabel = g.edge(e);\n  var labelRank = edgeLabel.labelRank;\n\n  if (wRank === vRank + 1) return;\n\n  g.removeEdge(e);\n\n  var dummy, attrs, i;\n  for (i = 0, ++vRank; vRank < wRank; ++i, ++vRank) {\n    edgeLabel.points = [];\n    attrs = {\n      width: 0,\n      height: 0,\n      edgeLabel: edgeLabel,\n      edgeObj: e,\n      rank: vRank,\n    };\n    dummy = util.addDummyNode(g, 'edge', attrs, '_d');\n    if (vRank === labelRank) {\n      attrs.width = edgeLabel.width;\n      attrs.height = edgeLabel.height;\n      // @ts-expect-error\n      attrs.dummy = 'edge-label';\n      // @ts-expect-error\n      attrs.labelpos = edgeLabel.labelpos;\n    }\n    g.setEdge(v, dummy, { weight: edgeLabel.weight }, name);\n    if (i === 0) {\n      g.graph().dummyChains.push(dummy);\n    }\n    v = dummy;\n  }\n\n  g.setEdge(v, w, { weight: edgeLabel.weight }, name);\n}\n\nfunction undo(g) {\n  _.forEach(g.graph().dummyChains, function (v) {\n    var node = g.node(v);\n    var origLabel = node.edgeLabel;\n    var w;\n    g.setEdge(node.edgeObj, origLabel);\n    while (node.dummy) {\n      w = g.successors(v)[0];\n      g.removeNode(v);\n      origLabel.points.push({ x: node.x, y: node.y });\n      if (node.dummy === 'edge-label') {\n        origLabel.x = node.x;\n        origLabel.y = node.y;\n        origLabel.width = node.width;\n        origLabel.height = node.height;\n      }\n      v = w;\n      node = g.node(v);\n    }\n  });\n}\n","import * as _ from 'lodash-es';\n\nexport { longestPath, slack };\n\n/*\n * Initializes ranks for the input graph using the longest path algorithm. This\n * algorithm scales well and is fast in practice, it yields rather poor\n * solutions. Nodes are pushed to the lowest layer possible, leaving the bottom\n * ranks wide and leaving edges longer than necessary. However, due to its\n * speed, this algorithm is good for getting an initial ranking that can be fed\n * into other algorithms.\n *\n * This algorithm does not normalize layers because it will be used by other\n * algorithms in most cases. If using this algorithm directly, be sure to\n * run normalize at the end.\n *\n * Pre-conditions:\n *\n *    1. Input graph is a DAG.\n *    2. Input graph node labels can be assigned properties.\n *\n * Post-conditions:\n *\n *    1. Each node will be assign an (unnormalized) \"rank\" property.\n */\nfunction longestPath(g) {\n  var visited = {};\n\n  function dfs(v) {\n    var label = g.node(v);\n    if (_.has(visited, v)) {\n      return label.rank;\n    }\n    visited[v] = true;\n\n    var rank = _.min(\n      _.map(g.outEdges(v), function (e) {\n        return dfs(e.w) - g.edge(e).minlen;\n      })\n    );\n\n    if (\n      rank === Number.POSITIVE_INFINITY || // return value of _.map([]) for Lodash 3\n      rank === undefined || // return value of _.map([]) for Lodash 4\n      rank === null\n    ) {\n      // return value of _.map([null])\n      rank = 0;\n    }\n\n    return (label.rank = rank);\n  }\n\n  _.forEach(g.sources(), dfs);\n}\n\n/*\n * Returns the amount of slack for the given edge. The slack is defined as the\n * difference between the length of the edge and its minimum length.\n */\nfunction slack(g, e) {\n  return g.node(e.w).rank - g.node(e.v).rank - g.edge(e).minlen;\n}\n","import * as _ from 'lodash-es';\nimport { Graph } from '../../graphlib/index.js';\nimport { slack } from './util.js';\n\nexport { feasibleTree };\n\n/*\n * Constructs a spanning tree with tight edges and adjusted the input node's\n * ranks to achieve this. A tight edge is one that is has a length that matches\n * its \"minlen\" attribute.\n *\n * The basic structure for this function is derived from Gansner, et al., \"A\n * Technique for Drawing Directed Graphs.\"\n *\n * Pre-conditions:\n *\n *    1. Graph must be a DAG.\n *    2. Graph must be connected.\n *    3. Graph must have at least one node.\n *    5. Graph nodes must have been previously assigned a \"rank\" property that\n *       respects the \"minlen\" property of incident edges.\n *    6. Graph edges must have a \"minlen\" property.\n *\n * Post-conditions:\n *\n *    - Graph nodes will have their rank adjusted to ensure that all edges are\n *      tight.\n *\n * Returns a tree (undirected graph) that is constructed using only \"tight\"\n * edges.\n */\nfunction feasibleTree(g) {\n  var t = new Graph({ directed: false });\n\n  // Choose arbitrary node from which to start our tree\n  var start = g.nodes()[0];\n  var size = g.nodeCount();\n  t.setNode(start, {});\n\n  var edge, delta;\n  while (tightTree(t, g) < size) {\n    edge = findMinSlackEdge(t, g);\n    delta = t.hasNode(edge.v) ? slack(g, edge) : -slack(g, edge);\n    shiftRanks(t, g, delta);\n  }\n\n  return t;\n}\n\n/*\n * Finds a maximal tree of tight edges and returns the number of nodes in the\n * tree.\n */\nfunction tightTree(t, g) {\n  function dfs(v) {\n    _.forEach(g.nodeEdges(v), function (e) {\n      var edgeV = e.v,\n        w = v === edgeV ? e.w : edgeV;\n      if (!t.hasNode(w) && !slack(g, e)) {\n        t.setNode(w, {});\n        t.setEdge(v, w, {});\n        dfs(w);\n      }\n    });\n  }\n\n  _.forEach(t.nodes(), dfs);\n  return t.nodeCount();\n}\n\n/*\n * Finds the edge with the smallest slack that is incident on tree and returns\n * it.\n */\nfunction findMinSlackEdge(t, g) {\n  return _.minBy(g.edges(), function (e) {\n    if (t.hasNode(e.v) !== t.hasNode(e.w)) {\n      return slack(g, e);\n    }\n  });\n}\n\nfunction shiftRanks(t, g, delta) {\n  _.forEach(t.nodes(), function (v) {\n    g.node(v).rank += delta;\n  });\n}\n","import * as _ from 'lodash-es';\n\nexport { topsort, CycleException };\n\ntopsort.CycleException = CycleException;\n\nfunction topsort(g) {\n  var visited = {};\n  var stack = {};\n  var results = [];\n\n  function visit(node) {\n    if (_.has(stack, node)) {\n      throw new CycleException();\n    }\n\n    if (!_.has(visited, node)) {\n      stack[node] = true;\n      visited[node] = true;\n      _.each(g.predecessors(node), visit);\n      delete stack[node];\n      results.push(node);\n    }\n  }\n\n  _.each(g.sinks(), visit);\n\n  if (_.size(visited) !== g.nodeCount()) {\n    throw new CycleException();\n  }\n\n  return results;\n}\n\nfunction CycleException() {}\nCycleException.prototype = new Error(); // must be an instance of Error to pass testing\n","import * as _ from 'lodash-es';\n\nexport { dfs };\n\n/*\n * A helper that preforms a pre- or post-order traversal on the input graph\n * and returns the nodes in the order they were visited. If the graph is\n * undirected then this algorithm will navigate using neighbors. If the graph\n * is directed then this algorithm will navigate using successors.\n *\n * Order must be one of \"pre\" or \"post\".\n */\nfunction dfs(g, vs, order) {\n  if (!_.isArray(vs)) {\n    vs = [vs];\n  }\n\n  var navigation = (g.isDirected() ? g.successors : g.neighbors).bind(g);\n\n  var acc = [];\n  var visited = {};\n  _.each(vs, function (v) {\n    if (!g.hasNode(v)) {\n      throw new Error('Graph does not have node: ' + v);\n    }\n\n    doDfs(g, v, order === 'post', visited, navigation, acc);\n  });\n  return acc;\n}\n\nfunction doDfs(g, v, postorder, visited, navigation, acc) {\n  if (!_.has(visited, v)) {\n    visited[v] = true;\n\n    if (!postorder) {\n      acc.push(v);\n    }\n    _.each(navigation(v), function (w) {\n      doDfs(g, w, postorder, visited, navigation, acc);\n    });\n    if (postorder) {\n      acc.push(v);\n    }\n  }\n}\n","import { dfs } from './dfs.js';\n\nexport { postorder };\n\nfunction postorder(g, vs) {\n  return dfs(g, vs, 'post');\n}\n","import { dfs } from './dfs.js';\n\nexport { preorder };\n\nfunction preorder(g, vs) {\n  return dfs(g, vs, 'pre');\n}\n","import * as _ from 'lodash-es';\nimport * as alg from '../../graphlib/alg/index.js';\nimport { simplify } from '../util.js';\nimport { feasibleTree } from './feasible-tree.js';\nimport { longestPath, slack } from './util.js';\n\nexport { networkSimplex };\n\n// Expose some internals for testing purposes\nnetworkSimplex.initLowLimValues = initLowLimValues;\nnetworkSimplex.initCutValues = initCutValues;\nnetworkSimplex.calcCutValue = calcCutValue;\nnetworkSimplex.leaveEdge = leaveEdge;\nnetworkSimplex.enterEdge = enterEdge;\nnetworkSimplex.exchangeEdges = exchangeEdges;\n\n/*\n * The network simplex algorithm assigns ranks to each node in the input graph\n * and iteratively improves the ranking to reduce the length of edges.\n *\n * Preconditions:\n *\n *    1. The input graph must be a DAG.\n *    2. All nodes in the graph must have an object value.\n *    3. All edges in the graph must have \"minlen\" and \"weight\" attributes.\n *\n * Postconditions:\n *\n *    1. All nodes in the graph will have an assigned \"rank\" attribute that has\n *       been optimized by the network simplex algorithm. Ranks start at 0.\n *\n *\n * A rough sketch of the algorithm is as follows:\n *\n *    1. Assign initial ranks to each node. We use the longest path algorithm,\n *       which assigns ranks to the lowest position possible. In general this\n *       leads to very wide bottom ranks and unnecessarily long edges.\n *    2. Construct a feasible tight tree. A tight tree is one such that all\n *       edges in the tree have no slack (difference between length of edge\n *       and minlen for the edge). This by itself greatly improves the assigned\n *       rankings by shorting edges.\n *    3. Iteratively find edges that have negative cut values. Generally a\n *       negative cut value indicates that the edge could be removed and a new\n *       tree edge could be added to produce a more compact graph.\n *\n * Much of the algorithms here are derived from Gansner, et al., \"A Technique\n * for Drawing Directed Graphs.\" The structure of the file roughly follows the\n * structure of the overall algorithm.\n */\nfunction networkSimplex(g) {\n  g = simplify(g);\n  longestPath(g);\n  var t = feasibleTree(g);\n  initLowLimValues(t);\n  initCutValues(t, g);\n\n  var e, f;\n  while ((e = leaveEdge(t))) {\n    f = enterEdge(t, g, e);\n    exchangeEdges(t, g, e, f);\n  }\n}\n\n/*\n * Initializes cut values for all edges in the tree.\n */\nfunction initCutValues(t, g) {\n  var vs = alg.postorder(t, t.nodes());\n  vs = vs.slice(0, vs.length - 1);\n  _.forEach(vs, function (v) {\n    assignCutValue(t, g, v);\n  });\n}\n\nfunction assignCutValue(t, g, child) {\n  var childLab = t.node(child);\n  var parent = childLab.parent;\n  t.edge(child, parent).cutvalue = calcCutValue(t, g, child);\n}\n\n/*\n * Given the tight tree, its graph, and a child in the graph calculate and\n * return the cut value for the edge between the child and its parent.\n */\nfunction calcCutValue(t, g, child) {\n  var childLab = t.node(child);\n  var parent = childLab.parent;\n  // True if the child is on the tail end of the edge in the directed graph\n  var childIsTail = true;\n  // The graph's view of the tree edge we're inspecting\n  var graphEdge = g.edge(child, parent);\n  // The accumulated cut value for the edge between this node and its parent\n  var cutValue = 0;\n\n  if (!graphEdge) {\n    childIsTail = false;\n    graphEdge = g.edge(parent, child);\n  }\n\n  cutValue = graphEdge.weight;\n\n  _.forEach(g.nodeEdges(child), function (e) {\n    var isOutEdge = e.v === child,\n      other = isOutEdge ? e.w : e.v;\n\n    if (other !== parent) {\n      var pointsToHead = isOutEdge === childIsTail,\n        otherWeight = g.edge(e).weight;\n\n      cutValue += pointsToHead ? otherWeight : -otherWeight;\n      if (isTreeEdge(t, child, other)) {\n        var otherCutValue = t.edge(child, other).cutvalue;\n        cutValue += pointsToHead ? -otherCutValue : otherCutValue;\n      }\n    }\n  });\n\n  return cutValue;\n}\n\nfunction initLowLimValues(tree, root) {\n  if (arguments.length < 2) {\n    root = tree.nodes()[0];\n  }\n  dfsAssignLowLim(tree, {}, 1, root);\n}\n\nfunction dfsAssignLowLim(tree, visited, nextLim, v, parent) {\n  var low = nextLim;\n  var label = tree.node(v);\n\n  visited[v] = true;\n  _.forEach(tree.neighbors(v), function (w) {\n    if (!_.has(visited, w)) {\n      nextLim = dfsAssignLowLim(tree, visited, nextLim, w, v);\n    }\n  });\n\n  label.low = low;\n  label.lim = nextLim++;\n  if (parent) {\n    label.parent = parent;\n  } else {\n    // TODO should be able to remove this when we incrementally update low lim\n    delete label.parent;\n  }\n\n  return nextLim;\n}\n\nfunction leaveEdge(tree) {\n  return _.find(tree.edges(), function (e) {\n    return tree.edge(e).cutvalue < 0;\n  });\n}\n\nfunction enterEdge(t, g, edge) {\n  var v = edge.v;\n  var w = edge.w;\n\n  // For the rest of this function we assume that v is the tail and w is the\n  // head, so if we don't have this edge in the graph we should flip it to\n  // match the correct orientation.\n  if (!g.hasEdge(v, w)) {\n    v = edge.w;\n    w = edge.v;\n  }\n\n  var vLabel = t.node(v);\n  var wLabel = t.node(w);\n  var tailLabel = vLabel;\n  var flip = false;\n\n  // If the root is in the tail of the edge then we need to flip the logic that\n  // checks for the head and tail nodes in the candidates function below.\n  if (vLabel.lim > wLabel.lim) {\n    tailLabel = wLabel;\n    flip = true;\n  }\n\n  var candidates = _.filter(g.edges(), function (edge) {\n    return (\n      flip === isDescendant(t, t.node(edge.v), tailLabel) &&\n      flip !== isDescendant(t, t.node(edge.w), tailLabel)\n    );\n  });\n\n  return _.minBy(candidates, function (edge) {\n    return slack(g, edge);\n  });\n}\n\nfunction exchangeEdges(t, g, e, f) {\n  var v = e.v;\n  var w = e.w;\n  t.removeEdge(v, w);\n  t.setEdge(f.v, f.w, {});\n  initLowLimValues(t);\n  initCutValues(t, g);\n  updateRanks(t, g);\n}\n\nfunction updateRanks(t, g) {\n  var root = _.find(t.nodes(), function (v) {\n    return !g.node(v).parent;\n  });\n  var vs = alg.preorder(t, root);\n  vs = vs.slice(1);\n  _.forEach(vs, function (v) {\n    var parent = t.node(v).parent,\n      edge = g.edge(v, parent),\n      flipped = false;\n\n    if (!edge) {\n      edge = g.edge(parent, v);\n      flipped = true;\n    }\n\n    g.node(v).rank = g.node(parent).rank + (flipped ? edge.minlen : -edge.minlen);\n  });\n}\n\n/*\n * Returns true if the edge is in the tree.\n */\nfunction isTreeEdge(tree, u, v) {\n  return tree.hasEdge(u, v);\n}\n\n/*\n * Returns true if the specified node is descendant of the root node per the\n * assigned low and lim attributes in the tree.\n */\nfunction isDescendant(tree, vLabel, rootLabel) {\n  return rootLabel.low <= vLabel.lim && vLabel.lim <= rootLabel.lim;\n}\n","import { feasibleTree } from './feasible-tree.js';\nimport { networkSimplex } from './network-simplex.js';\nimport { longestPath } from './util.js';\n\nexport { rank };\n\n/*\n * Assigns a rank to each node in the input graph that respects the \"minlen\"\n * constraint specified on edges between nodes.\n *\n * This basic structure is derived from Gansner, et al., \"A Technique for\n * Drawing Directed Graphs.\"\n *\n * Pre-conditions:\n *\n *    1. Graph must be a connected DAG\n *    2. Graph nodes must be objects\n *    3. Graph edges must have \"weight\" and \"minlen\" attributes\n *\n * Post-conditions:\n *\n *    1. Graph nodes will have a \"rank\" attribute based on the results of the\n *       algorithm. Ranks can start at any index (including negative), we'll\n *       fix them up later.\n */\nfunction rank(g) {\n  switch (g.graph().ranker) {\n    case 'network-simplex':\n      networkSimplexRanker(g);\n      break;\n    case 'tight-tree':\n      tightTreeRanker(g);\n      break;\n    case 'longest-path':\n      longestPathRanker(g);\n      break;\n    default:\n      networkSimplexRanker(g);\n  }\n}\n\n// A fast and simple ranker, but results are far from optimal.\nvar longestPathRanker = longestPath;\n\nfunction tightTreeRanker(g) {\n  longestPath(g);\n  feasibleTree(g);\n}\n\nfunction networkSimplexRanker(g) {\n  networkSimplex(g);\n}\n","import * as _ from 'lodash-es';\nimport * as util from './util.js';\n\nexport { run, cleanup };\n\n/*\n * A nesting graph creates dummy nodes for the tops and bottoms of subgraphs,\n * adds appropriate edges to ensure that all cluster nodes are placed between\n * these boundries, and ensures that the graph is connected.\n *\n * In addition we ensure, through the use of the minlen property, that nodes\n * and subgraph border nodes to not end up on the same rank.\n *\n * Preconditions:\n *\n *    1. Input graph is a DAG\n *    2. Nodes in the input graph has a minlen attribute\n *\n * Postconditions:\n *\n *    1. Input graph is connected.\n *    2. Dummy nodes are added for the tops and bottoms of subgraphs.\n *    3. The minlen attribute for nodes is adjusted to ensure nodes do not\n *       get placed on the same rank as subgraph border nodes.\n *\n * The nesting graph idea comes from Sander, \"Layout of Compound Directed\n * Graphs.\"\n */\nfunction run(g) {\n  var root = util.addDummyNode(g, 'root', {}, '_root');\n  var depths = treeDepths(g);\n  var height = _.max(_.values(depths)) - 1; // Note: depths is an Object not an array\n  var nodeSep = 2 * height + 1;\n\n  g.graph().nestingRoot = root;\n\n  // Multiply minlen by nodeSep to align nodes on non-border ranks.\n  _.forEach(g.edges(), function (e) {\n    g.edge(e).minlen *= nodeSep;\n  });\n\n  // Calculate a weight that is sufficient to keep subgraphs vertically compact\n  var weight = sumWeights(g) + 1;\n\n  // Create border nodes and link them up\n  _.forEach(g.children(), function (child) {\n    dfs(g, root, nodeSep, weight, height, depths, child);\n  });\n\n  // Save the multiplier for node layers for later removal of empty border\n  // layers.\n  g.graph().nodeRankFactor = nodeSep;\n}\n\nfunction dfs(g, root, nodeSep, weight, height, depths, v) {\n  var children = g.children(v);\n  if (!children.length) {\n    if (v !== root) {\n      g.setEdge(root, v, { weight: 0, minlen: nodeSep });\n    }\n    return;\n  }\n\n  var top = util.addBorderNode(g, '_bt');\n  var bottom = util.addBorderNode(g, '_bb');\n  var label = g.node(v);\n\n  g.setParent(top, v);\n  label.borderTop = top;\n  g.setParent(bottom, v);\n  label.borderBottom = bottom;\n\n  _.forEach(children, function (child) {\n    dfs(g, root, nodeSep, weight, height, depths, child);\n\n    var childNode = g.node(child);\n    var childTop = childNode.borderTop ? childNode.borderTop : child;\n    var childBottom = childNode.borderBottom ? childNode.borderBottom : child;\n    var thisWeight = childNode.borderTop ? weight : 2 * weight;\n    var minlen = childTop !== childBottom ? 1 : height - depths[v] + 1;\n\n    g.setEdge(top, childTop, {\n      weight: thisWeight,\n      minlen: minlen,\n      nestingEdge: true,\n    });\n\n    g.setEdge(childBottom, bottom, {\n      weight: thisWeight,\n      minlen: minlen,\n      nestingEdge: true,\n    });\n  });\n\n  if (!g.parent(v)) {\n    g.setEdge(root, top, { weight: 0, minlen: height + depths[v] });\n  }\n}\n\nfunction treeDepths(g) {\n  var depths = {};\n  function dfs(v, depth) {\n    var children = g.children(v);\n    if (children && children.length) {\n      _.forEach(children, function (child) {\n        dfs(child, depth + 1);\n      });\n    }\n    depths[v] = depth;\n  }\n  _.forEach(g.children(), function (v) {\n    dfs(v, 1);\n  });\n  return depths;\n}\n\nfunction sumWeights(g) {\n  return _.reduce(\n    g.edges(),\n    function (acc, e) {\n      return acc + g.edge(e).weight;\n    },\n    0\n  );\n}\n\nfunction cleanup(g) {\n  var graphLabel = g.graph();\n  g.removeNode(graphLabel.nestingRoot);\n  delete graphLabel.nestingRoot;\n  _.forEach(g.edges(), function (e) {\n    var edge = g.edge(e);\n    if (edge.nestingEdge) {\n      g.removeEdge(e);\n    }\n  });\n}\n","import * as _ from 'lodash-es';\n\nexport { addSubgraphConstraints };\n\nfunction addSubgraphConstraints(g, cg, vs) {\n  var prev = {},\n    rootPrev;\n\n  _.forEach(vs, function (v) {\n    var child = g.parent(v),\n      parent,\n      prevChild;\n    while (child) {\n      parent = g.parent(child);\n      if (parent) {\n        prevChild = prev[parent];\n        prev[parent] = child;\n      } else {\n        prevChild = rootPrev;\n        rootPrev = child;\n      }\n      if (prevChild && prevChild !== child) {\n        cg.setEdge(prevChild, child);\n        return;\n      }\n      child = parent;\n    }\n  });\n\n  /*\n  function dfs(v) {\n    var children = v ? g.children(v) : g.children();\n    if (children.length) {\n      var min = Number.POSITIVE_INFINITY,\n          subgraphs = [];\n      _.each(children, function(child) {\n        var childMin = dfs(child);\n        if (g.children(child).length) {\n          subgraphs.push({ v: child, order: childMin });\n        }\n        min = Math.min(min, childMin);\n      });\n      _.reduce(_.sortBy(subgraphs, \"order\"), function(prev, curr) {\n        cg.setEdge(prev.v, curr.v);\n        return curr;\n      });\n      return min;\n    }\n    return g.node(v).order;\n  }\n  dfs(undefined);\n  */\n}\n","import * as _ from 'lodash-es';\nimport { Graph } from '../../graphlib/index.js';\n\nexport { buildLayerGraph };\n\n/*\n * Constructs a graph that can be used to sort a layer of nodes. The graph will\n * contain all base and subgraph nodes from the request layer in their original\n * hierarchy and any edges that are incident on these nodes and are of the type\n * requested by the \"relationship\" parameter.\n *\n * Nodes from the requested rank that do not have parents are assigned a root\n * node in the output graph, which is set in the root graph attribute. This\n * makes it easy to walk the hierarchy of movable nodes during ordering.\n *\n * Pre-conditions:\n *\n *    1. Input graph is a DAG\n *    2. Base nodes in the input graph have a rank attribute\n *    3. Subgraph nodes in the input graph has minRank and maxRank attributes\n *    4. Edges have an assigned weight\n *\n * Post-conditions:\n *\n *    1. Output graph has all nodes in the movable rank with preserved\n *       hierarchy.\n *    2. Root nodes in the movable layer are made children of the node\n *       indicated by the root attribute of the graph.\n *    3. Non-movable nodes incident on movable nodes, selected by the\n *       relationship parameter, are included in the graph (without hierarchy).\n *    4. Edges incident on movable nodes, selected by the relationship\n *       parameter, are added to the output graph.\n *    5. The weights for copied edges are aggregated as need, since the output\n *       graph is not a multi-graph.\n */\nfunction buildLayerGraph(g, rank, relationship) {\n  var root = createRootNode(g),\n    result = new Graph({ compound: true })\n      .setGraph({ root: root })\n      .setDefaultNodeLabel(function (v) {\n        return g.node(v);\n      });\n\n  _.forEach(g.nodes(), function (v) {\n    var node = g.node(v),\n      parent = g.parent(v);\n\n    if (node.rank === rank || (node.minRank <= rank && rank <= node.maxRank)) {\n      result.setNode(v);\n      result.setParent(v, parent || root);\n\n      // This assumes we have only short edges!\n      _.forEach(g[relationship](v), function (e) {\n        var u = e.v === v ? e.w : e.v,\n          edge = result.edge(u, v),\n          weight = !_.isUndefined(edge) ? edge.weight : 0;\n        result.setEdge(u, v, { weight: g.edge(e).weight + weight });\n      });\n\n      if (_.has(node, 'minRank')) {\n        result.setNode(v, {\n          borderLeft: node.borderLeft[rank],\n          borderRight: node.borderRight[rank],\n        });\n      }\n    }\n  });\n\n  return result;\n}\n\nfunction createRootNode(g) {\n  var v;\n  while (g.hasNode((v = _.uniqueId('_root'))));\n  return v;\n}\n","import * as _ from 'lodash-es';\n\nexport { crossCount };\n\n/*\n * A function that takes a layering (an array of layers, each with an array of\n * ordererd nodes) and a graph and returns a weighted crossing count.\n *\n * Pre-conditions:\n *\n *    1. Input graph must be simple (not a multigraph), directed, and include\n *       only simple edges.\n *    2. Edges in the input graph must have assigned weights.\n *\n * Post-conditions:\n *\n *    1. The graph and layering matrix are left unchanged.\n *\n * This algorithm is derived from Barth, et al., \"Bilayer Cross Counting.\"\n */\nfunction crossCount(g, layering) {\n  var cc = 0;\n  for (var i = 1; i < layering.length; ++i) {\n    cc += twoLayerCrossCount(g, layering[i - 1], layering[i]);\n  }\n  return cc;\n}\n\nfunction twoLayerCrossCount(g, northLayer, southLayer) {\n  // Sort all of the edges between the north and south layers by their position\n  // in the north layer and then the south. Map these edges to the position of\n  // their head in the south layer.\n  var southPos = _.zipObject(\n    southLayer,\n    _.map(southLayer, function (v, i) {\n      return i;\n    })\n  );\n  var southEntries = _.flatten(\n    _.map(northLayer, function (v) {\n      return _.sortBy(\n        _.map(g.outEdges(v), function (e) {\n          return { pos: southPos[e.w], weight: g.edge(e).weight };\n        }),\n        'pos'\n      );\n    })\n  );\n\n  // Build the accumulator tree\n  var firstIndex = 1;\n  while (firstIndex < southLayer.length) firstIndex <<= 1;\n  var treeSize = 2 * firstIndex - 1;\n  firstIndex -= 1;\n  var tree = _.map(new Array(treeSize), function () {\n    return 0;\n  });\n\n  // Calculate the weighted crossings\n  var cc = 0;\n  _.forEach(\n    // @ts-expect-error\n    southEntries.forEach(function (entry) {\n      var index = entry.pos + firstIndex;\n      tree[index] += entry.weight;\n      var weightSum = 0;\n      // @ts-expect-error\n      while (index > 0) {\n        // @ts-expect-error\n        if (index % 2) {\n          weightSum += tree[index + 1];\n        }\n        // @ts-expect-error\n        index = (index - 1) >> 1;\n        tree[index] += entry.weight;\n      }\n      cc += entry.weight * weightSum;\n    })\n  );\n\n  return cc;\n}\n","import * as _ from 'lodash-es';\n\nexport { initOrder };\n\n/*\n * Assigns an initial order value for each node by performing a DFS search\n * starting from nodes in the first rank. Nodes are assigned an order in their\n * rank as they are first visited.\n *\n * This approach comes from Gansner, et al., \"A Technique for Drawing Directed\n * Graphs.\"\n *\n * Returns a layering matrix with an array per layer and each layer sorted by\n * the order of its nodes.\n */\nfunction initOrder(g) {\n  var visited = {};\n  var simpleNodes = _.filter(g.nodes(), function (v) {\n    return !g.children(v).length;\n  });\n  var maxRank = _.max(\n    _.map(simpleNodes, function (v) {\n      return g.node(v).rank;\n    })\n  );\n  var layers = _.map(_.range(maxRank + 1), function () {\n    return [];\n  });\n\n  function dfs(v) {\n    if (_.has(visited, v)) return;\n    visited[v] = true;\n    var node = g.node(v);\n    layers[node.rank].push(v);\n    _.forEach(g.successors(v), dfs);\n  }\n\n  var orderedVs = _.sortBy(simpleNodes, function (v) {\n    return g.node(v).rank;\n  });\n  _.forEach(orderedVs, dfs);\n\n  return layers;\n}\n","import * as _ from 'lodash-es';\n\nexport { barycenter };\n\nfunction barycenter(g, movable) {\n  return _.map(movable, function (v) {\n    var inV = g.inEdges(v);\n    if (!inV.length) {\n      return { v: v };\n    } else {\n      var result = _.reduce(\n        inV,\n        function (acc, e) {\n          var edge = g.edge(e),\n            nodeU = g.node(e.v);\n          return {\n            sum: acc.sum + edge.weight * nodeU.order,\n            weight: acc.weight + edge.weight,\n          };\n        },\n        { sum: 0, weight: 0 }\n      );\n\n      return {\n        v: v,\n        barycenter: result.sum / result.weight,\n        weight: result.weight,\n      };\n    }\n  });\n}\n","import * as _ from 'lodash-es';\n\nexport { resolveConflicts };\n\n/*\n * Given a list of entries of the form {v, barycenter, weight} and a\n * constraint graph this function will resolve any conflicts between the\n * constraint graph and the barycenters for the entries. If the barycenters for\n * an entry would violate a constraint in the constraint graph then we coalesce\n * the nodes in the conflict into a new node that respects the contraint and\n * aggregates barycenter and weight information.\n *\n * This implementation is based on the description in Forster, \"A Fast and\n * Simple Hueristic for Constrained Two-Level Crossing Reduction,\" thought it\n * differs in some specific details.\n *\n * Pre-conditions:\n *\n *    1. Each entry has the form {v, barycenter, weight}, or if the node has\n *       no barycenter, then {v}.\n *\n * Returns:\n *\n *    A new list of entries of the form {vs, i, barycenter, weight}. The list\n *    `vs` may either be a singleton or it may be an aggregation of nodes\n *    ordered such that they do not violate constraints from the constraint\n *    graph. The property `i` is the lowest original index of any of the\n *    elements in `vs`.\n */\nfunction resolveConflicts(entries, cg) {\n  var mappedEntries = {};\n  _.forEach(entries, function (entry, i) {\n    var tmp = (mappedEntries[entry.v] = {\n      indegree: 0,\n      in: [],\n      out: [],\n      vs: [entry.v],\n      i: i,\n    });\n    if (!_.isUndefined(entry.barycenter)) {\n      // @ts-expect-error\n      tmp.barycenter = entry.barycenter;\n      // @ts-expect-error\n      tmp.weight = entry.weight;\n    }\n  });\n\n  _.forEach(cg.edges(), function (e) {\n    var entryV = mappedEntries[e.v];\n    var entryW = mappedEntries[e.w];\n    if (!_.isUndefined(entryV) && !_.isUndefined(entryW)) {\n      entryW.indegree++;\n      entryV.out.push(mappedEntries[e.w]);\n    }\n  });\n\n  var sourceSet = _.filter(mappedEntries, function (entry) {\n    // @ts-expect-error\n    return !entry.indegree;\n  });\n\n  return doResolveConflicts(sourceSet);\n}\n\nfunction doResolveConflicts(sourceSet) {\n  var entries = [];\n\n  function handleIn(vEntry) {\n    return function (uEntry) {\n      if (uEntry.merged) {\n        return;\n      }\n      if (\n        _.isUndefined(uEntry.barycenter) ||\n        _.isUndefined(vEntry.barycenter) ||\n        uEntry.barycenter >= vEntry.barycenter\n      ) {\n        mergeEntries(vEntry, uEntry);\n      }\n    };\n  }\n\n  function handleOut(vEntry) {\n    return function (wEntry) {\n      wEntry['in'].push(vEntry);\n      if (--wEntry.indegree === 0) {\n        sourceSet.push(wEntry);\n      }\n    };\n  }\n\n  while (sourceSet.length) {\n    var entry = sourceSet.pop();\n    entries.push(entry);\n    _.forEach(entry['in'].reverse(), handleIn(entry));\n    _.forEach(entry.out, handleOut(entry));\n  }\n\n  return _.map(\n    _.filter(entries, function (entry) {\n      return !entry.merged;\n    }),\n    function (entry) {\n      return _.pick(entry, ['vs', 'i', 'barycenter', 'weight']);\n    }\n  );\n}\n\nfunction mergeEntries(target, source) {\n  var sum = 0;\n  var weight = 0;\n\n  if (target.weight) {\n    sum += target.barycenter * target.weight;\n    weight += target.weight;\n  }\n\n  if (source.weight) {\n    sum += source.barycenter * source.weight;\n    weight += source.weight;\n  }\n\n  target.vs = source.vs.concat(target.vs);\n  target.barycenter = sum / weight;\n  target.weight = weight;\n  target.i = Math.min(source.i, target.i);\n  source.merged = true;\n}\n","import * as _ from 'lodash-es';\nimport * as util from '../util.js';\n\nexport { sort };\n\nfunction sort(entries, biasRight) {\n  var parts = util.partition(entries, function (entry) {\n    return _.has(entry, 'barycenter');\n  });\n  var sortable = parts.lhs,\n    unsortable = _.sortBy(parts.rhs, function (entry) {\n      return -entry.i;\n    }),\n    vs = [],\n    sum = 0,\n    weight = 0,\n    vsIndex = 0;\n\n  sortable.sort(compareWithBias(!!biasRight));\n\n  vsIndex = consumeUnsortable(vs, unsortable, vsIndex);\n\n  _.forEach(sortable, function (entry) {\n    vsIndex += entry.vs.length;\n    vs.push(entry.vs);\n    sum += entry.barycenter * entry.weight;\n    weight += entry.weight;\n    vsIndex = consumeUnsortable(vs, unsortable, vsIndex);\n  });\n\n  var result = { vs: _.flatten(vs) };\n  if (weight) {\n    result.barycenter = sum / weight;\n    result.weight = weight;\n  }\n  return result;\n}\n\nfunction consumeUnsortable(vs, unsortable, index) {\n  var last;\n  while (unsortable.length && (last = _.last(unsortable)).i <= index) {\n    unsortable.pop();\n    vs.push(last.vs);\n    index++;\n  }\n  return index;\n}\n\nfunction compareWithBias(bias) {\n  return function (entryV, entryW) {\n    if (entryV.barycenter < entryW.barycenter) {\n      return -1;\n    } else if (entryV.barycenter > entryW.barycenter) {\n      return 1;\n    }\n\n    return !bias ? entryV.i - entryW.i : entryW.i - entryV.i;\n  };\n}\n","import * as _ from 'lodash-es';\nimport { barycenter } from './barycenter.js';\nimport { resolveConflicts } from './resolve-conflicts.js';\nimport { sort } from './sort.js';\n\nexport { sortSubgraph };\n\nfunction sortSubgraph(g, v, cg, biasRight) {\n  var movable = g.children(v);\n  var node = g.node(v);\n  var bl = node ? node.borderLeft : undefined;\n  var br = node ? node.borderRight : undefined;\n  var subgraphs = {};\n\n  if (bl) {\n    movable = _.filter(movable, function (w) {\n      return w !== bl && w !== br;\n    });\n  }\n\n  var barycenters = barycenter(g, movable);\n  _.forEach(barycenters, function (entry) {\n    if (g.children(entry.v).length) {\n      var subgraphResult = sortSubgraph(g, entry.v, cg, biasRight);\n      subgraphs[entry.v] = subgraphResult;\n      if (_.has(subgraphResult, 'barycenter')) {\n        mergeBarycenters(entry, subgraphResult);\n      }\n    }\n  });\n\n  var entries = resolveConflicts(barycenters, cg);\n  expandSubgraphs(entries, subgraphs);\n\n  var result = sort(entries, biasRight);\n\n  if (bl) {\n    result.vs = _.flatten([bl, result.vs, br]);\n    if (g.predecessors(bl).length) {\n      var blPred = g.node(g.predecessors(bl)[0]),\n        brPred = g.node(g.predecessors(br)[0]);\n      if (!_.has(result, 'barycenter')) {\n        result.barycenter = 0;\n        result.weight = 0;\n      }\n      result.barycenter =\n        (result.barycenter * result.weight + blPred.order + brPred.order) / (result.weight + 2);\n      result.weight += 2;\n    }\n  }\n\n  return result;\n}\n\nfunction expandSubgraphs(entries, subgraphs) {\n  _.forEach(entries, function (entry) {\n    entry.vs = _.flatten(\n      entry.vs.map(function (v) {\n        if (subgraphs[v]) {\n          return subgraphs[v].vs;\n        }\n        return v;\n      })\n    );\n  });\n}\n\nfunction mergeBarycenters(target, other) {\n  if (!_.isUndefined(target.barycenter)) {\n    target.barycenter =\n      (target.barycenter * target.weight + other.barycenter * other.weight) /\n      (target.weight + other.weight);\n    target.weight += other.weight;\n  } else {\n    target.barycenter = other.barycenter;\n    target.weight = other.weight;\n  }\n}\n","import * as _ from 'lodash-es';\nimport { Graph } from '../../graphlib/index.js';\nimport * as util from '../util.js';\nimport { addSubgraphConstraints } from './add-subgraph-constraints.js';\nimport { buildLayerGraph } from './build-layer-graph.js';\nimport { crossCount } from './cross-count.js';\nimport { initOrder } from './init-order.js';\nimport { sortSubgraph } from './sort-subgraph.js';\n\nexport { order };\n\n/*\n * Applies heuristics to minimize edge crossings in the graph and sets the best\n * order solution as an order attribute on each node.\n *\n * Pre-conditions:\n *\n *    1. Graph must be DAG\n *    2. Graph nodes must be objects with a \"rank\" attribute\n *    3. Graph edges must have the \"weight\" attribute\n *\n * Post-conditions:\n *\n *    1. Graph nodes will have an \"order\" attribute based on the results of the\n *       algorithm.\n */\nfunction order(g) {\n  var maxRank = util.maxRank(g),\n    downLayerGraphs = buildLayerGraphs(g, _.range(1, maxRank + 1), 'inEdges'),\n    upLayerGraphs = buildLayerGraphs(g, _.range(maxRank - 1, -1, -1), 'outEdges');\n\n  var layering = initOrder(g);\n  assignOrder(g, layering);\n\n  var bestCC = Number.POSITIVE_INFINITY,\n    best;\n\n  for (var i = 0, lastBest = 0; lastBest < 4; ++i, ++lastBest) {\n    sweepLayerGraphs(i % 2 ? downLayerGraphs : upLayerGraphs, i % 4 >= 2);\n\n    layering = util.buildLayerMatrix(g);\n    var cc = crossCount(g, layering);\n    if (cc < bestCC) {\n      lastBest = 0;\n      best = _.cloneDeep(layering);\n      bestCC = cc;\n    }\n  }\n\n  assignOrder(g, best);\n}\n\nfunction buildLayerGraphs(g, ranks, relationship) {\n  return _.map(ranks, function (rank) {\n    return buildLayerGraph(g, rank, relationship);\n  });\n}\n\nfunction sweepLayerGraphs(layerGraphs, biasRight) {\n  var cg = new Graph();\n  _.forEach(layerGraphs, function (lg) {\n    var root = lg.graph().root;\n    var sorted = sortSubgraph(lg, root, cg, biasRight);\n    _.forEach(sorted.vs, function (v, i) {\n      lg.node(v).order = i;\n    });\n    addSubgraphConstraints(lg, cg, sorted.vs);\n  });\n}\n\nfunction assignOrder(g, layering) {\n  _.forEach(layering, function (layer) {\n    _.forEach(layer, function (v, i) {\n      g.node(v).order = i;\n    });\n  });\n}\n","import * as _ from 'lodash-es';\n\nexport { parentDummyChains };\n\nfunction parentDummyChains(g) {\n  var postorderNums = postorder(g);\n\n  _.forEach(g.graph().dummyChains, function (v) {\n    var node = g.node(v);\n    var edgeObj = node.edgeObj;\n    var pathData = findPath(g, postorderNums, edgeObj.v, edgeObj.w);\n    var path = pathData.path;\n    var lca = pathData.lca;\n    var pathIdx = 0;\n    var pathV = path[pathIdx];\n    var ascending = true;\n\n    while (v !== edgeObj.w) {\n      node = g.node(v);\n\n      if (ascending) {\n        while ((pathV = path[pathIdx]) !== lca && g.node(pathV).maxRank < node.rank) {\n          pathIdx++;\n        }\n\n        if (pathV === lca) {\n          ascending = false;\n        }\n      }\n\n      if (!ascending) {\n        while (\n          pathIdx < path.length - 1 &&\n          g.node((pathV = path[pathIdx + 1])).minRank <= node.rank\n        ) {\n          pathIdx++;\n        }\n        pathV = path[pathIdx];\n      }\n\n      g.setParent(v, pathV);\n      v = g.successors(v)[0];\n    }\n  });\n}\n\n// Find a path from v to w through the lowest common ancestor (LCA). Return the\n// full path and the LCA.\nfunction findPath(g, postorderNums, v, w) {\n  var vPath = [];\n  var wPath = [];\n  var low = Math.min(postorderNums[v].low, postorderNums[w].low);\n  var lim = Math.max(postorderNums[v].lim, postorderNums[w].lim);\n  var parent;\n  var lca;\n\n  // Traverse up from v to find the LCA\n  parent = v;\n  do {\n    parent = g.parent(parent);\n    vPath.push(parent);\n  } while (parent && (postorderNums[parent].low > low || lim > postorderNums[parent].lim));\n  lca = parent;\n\n  // Traverse from w to LCA\n  parent = w;\n  while ((parent = g.parent(parent)) !== lca) {\n    wPath.push(parent);\n  }\n\n  return { path: vPath.concat(wPath.reverse()), lca: lca };\n}\n\nfunction postorder(g) {\n  var result = {};\n  var lim = 0;\n\n  function dfs(v) {\n    var low = lim;\n    _.forEach(g.children(v), dfs);\n    result[v] = { low: low, lim: lim++ };\n  }\n  _.forEach(g.children(), dfs);\n\n  return result;\n}\n","import * as _ from 'lodash-es';\nimport { Graph } from '../../graphlib/index.js';\nimport * as util from '../util.js';\n\n/*\n * This module provides coordinate assignment based on Brandes and Köpf, \"Fast\n * and Simple Horizontal Coordinate Assignment.\"\n */\n\nexport {\n  positionX,\n  findType1Conflicts,\n  findType2Conflicts,\n  addConflict,\n  hasConflict,\n  verticalAlignment,\n  horizontalCompaction,\n  alignCoordinates,\n  findSmallestWidthAlignment,\n  balance,\n};\n\n/*\n * Marks all edges in the graph with a type-1 conflict with the \"type1Conflict\"\n * property. A type-1 conflict is one where a non-inner segment crosses an\n * inner segment. An inner segment is an edge with both incident nodes marked\n * with the \"dummy\" property.\n *\n * This algorithm scans layer by layer, starting with the second, for type-1\n * conflicts between the current layer and the previous layer. For each layer\n * it scans the nodes from left to right until it reaches one that is incident\n * on an inner segment. It then scans predecessors to determine if they have\n * edges that cross that inner segment. At the end a final scan is done for all\n * nodes on the current rank to see if they cross the last visited inner\n * segment.\n *\n * This algorithm (safely) assumes that a dummy node will only be incident on a\n * single node in the layers being scanned.\n */\nfunction findType1Conflicts(g, layering) {\n  var conflicts = {};\n\n  function visitLayer(prevLayer, layer) {\n    var // last visited node in the previous layer that is incident on an inner\n      // segment.\n      k0 = 0,\n      // Tracks the last node in this layer scanned for crossings with a type-1\n      // segment.\n      scanPos = 0,\n      prevLayerLength = prevLayer.length,\n      lastNode = _.last(layer);\n\n    _.forEach(layer, function (v, i) {\n      var w = findOtherInnerSegmentNode(g, v),\n        k1 = w ? g.node(w).order : prevLayerLength;\n\n      if (w || v === lastNode) {\n        _.forEach(layer.slice(scanPos, i + 1), function (scanNode) {\n          _.forEach(g.predecessors(scanNode), function (u) {\n            var uLabel = g.node(u),\n              uPos = uLabel.order;\n            if ((uPos < k0 || k1 < uPos) && !(uLabel.dummy && g.node(scanNode).dummy)) {\n              addConflict(conflicts, u, scanNode);\n            }\n          });\n        });\n        // @ts-expect-error\n        scanPos = i + 1;\n        k0 = k1;\n      }\n    });\n\n    return layer;\n  }\n\n  _.reduce(layering, visitLayer);\n  return conflicts;\n}\n\nfunction findType2Conflicts(g, layering) {\n  var conflicts = {};\n\n  function scan(south, southPos, southEnd, prevNorthBorder, nextNorthBorder) {\n    var v;\n    _.forEach(_.range(southPos, southEnd), function (i) {\n      v = south[i];\n      if (g.node(v).dummy) {\n        _.forEach(g.predecessors(v), function (u) {\n          var uNode = g.node(u);\n          if (uNode.dummy && (uNode.order < prevNorthBorder || uNode.order > nextNorthBorder)) {\n            addConflict(conflicts, u, v);\n          }\n        });\n      }\n    });\n  }\n\n  function visitLayer(north, south) {\n    var prevNorthPos = -1,\n      nextNorthPos,\n      southPos = 0;\n\n    _.forEach(south, function (v, southLookahead) {\n      if (g.node(v).dummy === 'border') {\n        var predecessors = g.predecessors(v);\n        if (predecessors.length) {\n          nextNorthPos = g.node(predecessors[0]).order;\n          scan(south, southPos, southLookahead, prevNorthPos, nextNorthPos);\n          // @ts-expect-error\n          southPos = southLookahead;\n          prevNorthPos = nextNorthPos;\n        }\n      }\n      scan(south, southPos, south.length, nextNorthPos, north.length);\n    });\n\n    return south;\n  }\n\n  _.reduce(layering, visitLayer);\n  return conflicts;\n}\n\nfunction findOtherInnerSegmentNode(g, v) {\n  if (g.node(v).dummy) {\n    return _.find(g.predecessors(v), function (u) {\n      return g.node(u).dummy;\n    });\n  }\n}\n\nfunction addConflict(conflicts, v, w) {\n  if (v > w) {\n    var tmp = v;\n    v = w;\n    w = tmp;\n  }\n\n  var conflictsV = conflicts[v];\n  if (!conflictsV) {\n    conflicts[v] = conflictsV = {};\n  }\n  conflictsV[w] = true;\n}\n\nfunction hasConflict(conflicts, v, w) {\n  if (v > w) {\n    var tmp = v;\n    v = w;\n    w = tmp;\n  }\n  return _.has(conflicts[v], w);\n}\n\n/*\n * Try to align nodes into vertical \"blocks\" where possible. This algorithm\n * attempts to align a node with one of its median neighbors. If the edge\n * connecting a neighbor is a type-1 conflict then we ignore that possibility.\n * If a previous node has already formed a block with a node after the node\n * we're trying to form a block with, we also ignore that possibility - our\n * blocks would be split in that scenario.\n */\nfunction verticalAlignment(g, layering, conflicts, neighborFn) {\n  var root = {},\n    align = {},\n    pos = {};\n\n  // We cache the position here based on the layering because the graph and\n  // layering may be out of sync. The layering matrix is manipulated to\n  // generate different extreme alignments.\n  _.forEach(layering, function (layer) {\n    _.forEach(layer, function (v, order) {\n      root[v] = v;\n      align[v] = v;\n      pos[v] = order;\n    });\n  });\n\n  _.forEach(layering, function (layer) {\n    var prevIdx = -1;\n    _.forEach(layer, function (v) {\n      var ws = neighborFn(v);\n      if (ws.length) {\n        ws = _.sortBy(ws, function (w) {\n          return pos[w];\n        });\n        var mp = (ws.length - 1) / 2;\n        for (var i = Math.floor(mp), il = Math.ceil(mp); i <= il; ++i) {\n          var w = ws[i];\n          if (align[v] === v && prevIdx < pos[w] && !hasConflict(conflicts, v, w)) {\n            align[w] = v;\n            align[v] = root[v] = root[w];\n            prevIdx = pos[w];\n          }\n        }\n      }\n    });\n  });\n\n  return { root: root, align: align };\n}\n\nfunction horizontalCompaction(g, layering, root, align, reverseSep) {\n  // This portion of the algorithm differs from BK due to a number of problems.\n  // Instead of their algorithm we construct a new block graph and do two\n  // sweeps. The first sweep places blocks with the smallest possible\n  // coordinates. The second sweep removes unused space by moving blocks to the\n  // greatest coordinates without violating separation.\n  var xs = {},\n    blockG = buildBlockGraph(g, layering, root, reverseSep),\n    borderType = reverseSep ? 'borderLeft' : 'borderRight';\n\n  function iterate(setXsFunc, nextNodesFunc) {\n    var stack = blockG.nodes();\n    var elem = stack.pop();\n    var visited = {};\n    while (elem) {\n      if (visited[elem]) {\n        setXsFunc(elem);\n      } else {\n        visited[elem] = true;\n        stack.push(elem);\n        stack = stack.concat(nextNodesFunc(elem));\n      }\n\n      elem = stack.pop();\n    }\n  }\n\n  // First pass, assign smallest coordinates\n  function pass1(elem) {\n    xs[elem] = blockG.inEdges(elem).reduce(function (acc, e) {\n      return Math.max(acc, xs[e.v] + blockG.edge(e));\n    }, 0);\n  }\n\n  // Second pass, assign greatest coordinates\n  function pass2(elem) {\n    var min = blockG.outEdges(elem).reduce(function (acc, e) {\n      return Math.min(acc, xs[e.w] - blockG.edge(e));\n    }, Number.POSITIVE_INFINITY);\n\n    var node = g.node(elem);\n    if (min !== Number.POSITIVE_INFINITY && node.borderType !== borderType) {\n      xs[elem] = Math.max(xs[elem], min);\n    }\n  }\n\n  iterate(pass1, blockG.predecessors.bind(blockG));\n  iterate(pass2, blockG.successors.bind(blockG));\n\n  // Assign x coordinates to all nodes\n  _.forEach(align, function (v) {\n    xs[v] = xs[root[v]];\n  });\n\n  return xs;\n}\n\nfunction buildBlockGraph(g, layering, root, reverseSep) {\n  var blockGraph = new Graph(),\n    graphLabel = g.graph(),\n    sepFn = sep(graphLabel.nodesep, graphLabel.edgesep, reverseSep);\n\n  _.forEach(layering, function (layer) {\n    var u;\n    _.forEach(layer, function (v) {\n      var vRoot = root[v];\n      blockGraph.setNode(vRoot);\n      if (u) {\n        var uRoot = root[u],\n          prevMax = blockGraph.edge(uRoot, vRoot);\n        blockGraph.setEdge(uRoot, vRoot, Math.max(sepFn(g, v, u), prevMax || 0));\n      }\n      u = v;\n    });\n  });\n\n  return blockGraph;\n}\n\n/*\n * Returns the alignment that has the smallest width of the given alignments.\n */\nfunction findSmallestWidthAlignment(g, xss) {\n  return _.minBy(_.values(xss), function (xs) {\n    var max = Number.NEGATIVE_INFINITY;\n    var min = Number.POSITIVE_INFINITY;\n\n    _.forIn(xs, function (x, v) {\n      var halfWidth = width(g, v) / 2;\n\n      max = Math.max(x + halfWidth, max);\n      min = Math.min(x - halfWidth, min);\n    });\n\n    return max - min;\n  });\n}\n\n/*\n * Align the coordinates of each of the layout alignments such that\n * left-biased alignments have their minimum coordinate at the same point as\n * the minimum coordinate of the smallest width alignment and right-biased\n * alignments have their maximum coordinate at the same point as the maximum\n * coordinate of the smallest width alignment.\n */\nfunction alignCoordinates(xss, alignTo) {\n  var alignToVals = _.values(alignTo),\n    alignToMin = _.min(alignToVals),\n    alignToMax = _.max(alignToVals);\n\n  _.forEach(['u', 'd'], function (vert) {\n    _.forEach(['l', 'r'], function (horiz) {\n      var alignment = vert + horiz,\n        xs = xss[alignment],\n        delta;\n      if (xs === alignTo) return;\n\n      var xsVals = _.values(xs);\n      delta = horiz === 'l' ? alignToMin - _.min(xsVals) : alignToMax - _.max(xsVals);\n\n      if (delta) {\n        xss[alignment] = _.mapValues(xs, function (x) {\n          return x + delta;\n        });\n      }\n    });\n  });\n}\n\nfunction balance(xss, align) {\n  return _.mapValues(xss.ul, function (ignore, v) {\n    if (align) {\n      return xss[align.toLowerCase()][v];\n    } else {\n      var xs = _.sortBy(_.map(xss, v));\n      return (xs[1] + xs[2]) / 2;\n    }\n  });\n}\n\nfunction positionX(g) {\n  var layering = util.buildLayerMatrix(g);\n  var conflicts = _.merge(findType1Conflicts(g, layering), findType2Conflicts(g, layering));\n\n  var xss = {};\n  var adjustedLayering;\n  _.forEach(['u', 'd'], function (vert) {\n    adjustedLayering = vert === 'u' ? layering : _.values(layering).reverse();\n    _.forEach(['l', 'r'], function (horiz) {\n      if (horiz === 'r') {\n        adjustedLayering = _.map(adjustedLayering, function (inner) {\n          return _.values(inner).reverse();\n        });\n      }\n\n      var neighborFn = (vert === 'u' ? g.predecessors : g.successors).bind(g);\n      var align = verticalAlignment(g, adjustedLayering, conflicts, neighborFn);\n      var xs = horizontalCompaction(g, adjustedLayering, align.root, align.align, horiz === 'r');\n      if (horiz === 'r') {\n        xs = _.mapValues(xs, function (x) {\n          return -x;\n        });\n      }\n      xss[vert + horiz] = xs;\n    });\n  });\n\n  var smallestWidth = findSmallestWidthAlignment(g, xss);\n  alignCoordinates(xss, smallestWidth);\n  return balance(xss, g.graph().align);\n}\n\nfunction sep(nodeSep, edgeSep, reverseSep) {\n  return function (g, v, w) {\n    var vLabel = g.node(v);\n    var wLabel = g.node(w);\n    var sum = 0;\n    var delta;\n\n    sum += vLabel.width / 2;\n    if (_.has(vLabel, 'labelpos')) {\n      switch (vLabel.labelpos.toLowerCase()) {\n        case 'l':\n          delta = -vLabel.width / 2;\n          break;\n        case 'r':\n          delta = vLabel.width / 2;\n          break;\n      }\n    }\n    if (delta) {\n      sum += reverseSep ? delta : -delta;\n    }\n    delta = 0;\n\n    sum += (vLabel.dummy ? edgeSep : nodeSep) / 2;\n    sum += (wLabel.dummy ? edgeSep : nodeSep) / 2;\n\n    sum += wLabel.width / 2;\n    if (_.has(wLabel, 'labelpos')) {\n      switch (wLabel.labelpos.toLowerCase()) {\n        case 'l':\n          delta = wLabel.width / 2;\n          break;\n        case 'r':\n          delta = -wLabel.width / 2;\n          break;\n      }\n    }\n    if (delta) {\n      sum += reverseSep ? delta : -delta;\n    }\n    delta = 0;\n\n    return sum;\n  };\n}\n\nfunction width(g, v) {\n  return g.node(v).width;\n}\n","import * as _ from 'lodash-es';\nimport * as util from '../util.js';\nimport { positionX } from './bk.js';\n\nexport { position };\n\nfunction position(g) {\n  g = util.asNonCompoundGraph(g);\n\n  positionY(g);\n  _.forOwn(positionX(g), function (x, v) {\n    g.node(v).x = x;\n  });\n}\n\nfunction positionY(g) {\n  var layering = util.buildLayerMatrix(g);\n  var rankSep = g.graph().ranksep;\n  var prevY = 0;\n  _.forEach(layering, function (layer) {\n    var maxHeight = _.max(\n      _.map(layer, function (v) {\n        return g.node(v).height;\n      })\n    );\n    _.forEach(layer, function (v) {\n      g.node(v).y = prevY + maxHeight / 2;\n    });\n    prevY += maxHeight + rankSep;\n  });\n}\n","import * as _ from 'lodash-es';\nimport { Graph } from '../graphlib/index.js';\nimport { addBorderSegments } from './add-border-segments.js';\nimport * as coordinateSystem from './coordinate-system.js';\nimport * as acyclic from './acyclic.js';\nimport * as normalize from './normalize.js';\nimport { rank } from './rank/index.js';\nimport * as nestingGraph from './nesting-graph.js';\nimport { order } from './order/index.js';\nimport { parentDummyChains } from './parent-dummy-chains.js';\nimport { position } from './position/index.js';\nimport * as util from './util.js';\n\nexport { layout };\n\nfunction layout(g, opts) {\n  var time = opts && opts.debugTiming ? util.time : util.notime;\n  time('layout', function () {\n    var layoutGraph = time('  buildLayoutGraph', function () {\n      return buildLayoutGraph(g);\n    });\n    time('  runLayout', function () {\n      runLayout(layoutGraph, time);\n    });\n    time('  updateInputGraph', function () {\n      updateInputGraph(g, layoutGraph);\n    });\n  });\n}\n\nfunction runLayout(g, time) {\n  time('    makeSpaceForEdgeLabels', function () {\n    makeSpaceForEdgeLabels(g);\n  });\n  time('    removeSelfEdges', function () {\n    removeSelfEdges(g);\n  });\n  time('    acyclic', function () {\n    acyclic.run(g);\n  });\n  time('    nestingGraph.run', function () {\n    nestingGraph.run(g);\n  });\n  time('    rank', function () {\n    rank(util.asNonCompoundGraph(g));\n  });\n  time('    injectEdgeLabelProxies', function () {\n    injectEdgeLabelProxies(g);\n  });\n  time('    removeEmptyRanks', function () {\n    util.removeEmptyRanks(g);\n  });\n  time('    nestingGraph.cleanup', function () {\n    nestingGraph.cleanup(g);\n  });\n  time('    normalizeRanks', function () {\n    util.normalizeRanks(g);\n  });\n  time('    assignRankMinMax', function () {\n    assignRankMinMax(g);\n  });\n  time('    removeEdgeLabelProxies', function () {\n    removeEdgeLabelProxies(g);\n  });\n  time('    normalize.run', function () {\n    normalize.run(g);\n  });\n  time('    parentDummyChains', function () {\n    parentDummyChains(g);\n  });\n  time('    addBorderSegments', function () {\n    addBorderSegments(g);\n  });\n  time('    order', function () {\n    order(g);\n  });\n  time('    insertSelfEdges', function () {\n    insertSelfEdges(g);\n  });\n  time('    adjustCoordinateSystem', function () {\n    coordinateSystem.adjust(g);\n  });\n  time('    position', function () {\n    position(g);\n  });\n  time('    positionSelfEdges', function () {\n    positionSelfEdges(g);\n  });\n  time('    removeBorderNodes', function () {\n    removeBorderNodes(g);\n  });\n  time('    normalize.undo', function () {\n    normalize.undo(g);\n  });\n  time('    fixupEdgeLabelCoords', function () {\n    fixupEdgeLabelCoords(g);\n  });\n  time('    undoCoordinateSystem', function () {\n    coordinateSystem.undo(g);\n  });\n  time('    translateGraph', function () {\n    translateGraph(g);\n  });\n  time('    assignNodeIntersects', function () {\n    assignNodeIntersects(g);\n  });\n  time('    reversePoints', function () {\n    reversePointsForReversedEdges(g);\n  });\n  time('    acyclic.undo', function () {\n    acyclic.undo(g);\n  });\n}\n\n/*\n * Copies final layout information from the layout graph back to the input\n * graph. This process only copies whitelisted attributes from the layout graph\n * to the input graph, so it serves as a good place to determine what\n * attributes can influence layout.\n */\nfunction updateInputGraph(inputGraph, layoutGraph) {\n  _.forEach(inputGraph.nodes(), function (v) {\n    var inputLabel = inputGraph.node(v);\n    var layoutLabel = layoutGraph.node(v);\n\n    if (inputLabel) {\n      inputLabel.x = layoutLabel.x;\n      inputLabel.y = layoutLabel.y;\n\n      if (layoutGraph.children(v).length) {\n        inputLabel.width = layoutLabel.width;\n        inputLabel.height = layoutLabel.height;\n      }\n    }\n  });\n\n  _.forEach(inputGraph.edges(), function (e) {\n    var inputLabel = inputGraph.edge(e);\n    var layoutLabel = layoutGraph.edge(e);\n\n    inputLabel.points = layoutLabel.points;\n    if (_.has(layoutLabel, 'x')) {\n      inputLabel.x = layoutLabel.x;\n      inputLabel.y = layoutLabel.y;\n    }\n  });\n\n  inputGraph.graph().width = layoutGraph.graph().width;\n  inputGraph.graph().height = layoutGraph.graph().height;\n}\n\nvar graphNumAttrs = ['nodesep', 'edgesep', 'ranksep', 'marginx', 'marginy'];\nvar graphDefaults = { ranksep: 50, edgesep: 20, nodesep: 50, rankdir: 'tb' };\nvar graphAttrs = ['acyclicer', 'ranker', 'rankdir', 'align'];\nvar nodeNumAttrs = ['width', 'height'];\nvar nodeDefaults = { width: 0, height: 0 };\nvar edgeNumAttrs = ['minlen', 'weight', 'width', 'height', 'labeloffset'];\nvar edgeDefaults = {\n  minlen: 1,\n  weight: 1,\n  width: 0,\n  height: 0,\n  labeloffset: 10,\n  labelpos: 'r',\n};\nvar edgeAttrs = ['labelpos'];\n\n/*\n * Constructs a new graph from the input graph, which can be used for layout.\n * This process copies only whitelisted attributes from the input graph to the\n * layout graph. Thus this function serves as a good place to determine what\n * attributes can influence layout.\n */\nfunction buildLayoutGraph(inputGraph) {\n  var g = new Graph({ multigraph: true, compound: true });\n  var graph = canonicalize(inputGraph.graph());\n\n  g.setGraph(\n    _.merge({}, graphDefaults, selectNumberAttrs(graph, graphNumAttrs), _.pick(graph, graphAttrs))\n  );\n\n  _.forEach(inputGraph.nodes(), function (v) {\n    var node = canonicalize(inputGraph.node(v));\n    g.setNode(v, _.defaults(selectNumberAttrs(node, nodeNumAttrs), nodeDefaults));\n    g.setParent(v, inputGraph.parent(v));\n  });\n\n  _.forEach(inputGraph.edges(), function (e) {\n    var edge = canonicalize(inputGraph.edge(e));\n    g.setEdge(\n      e,\n      _.merge({}, edgeDefaults, selectNumberAttrs(edge, edgeNumAttrs), _.pick(edge, edgeAttrs))\n    );\n  });\n\n  return g;\n}\n\n/*\n * This idea comes from the Gansner paper: to account for edge labels in our\n * layout we split each rank in half by doubling minlen and halving ranksep.\n * Then we can place labels at these mid-points between nodes.\n *\n * We also add some minimal padding to the width to push the label for the edge\n * away from the edge itself a bit.\n */\nfunction makeSpaceForEdgeLabels(g) {\n  var graph = g.graph();\n  graph.ranksep /= 2;\n  _.forEach(g.edges(), function (e) {\n    var edge = g.edge(e);\n    edge.minlen *= 2;\n    if (edge.labelpos.toLowerCase() !== 'c') {\n      if (graph.rankdir === 'TB' || graph.rankdir === 'BT') {\n        edge.width += edge.labeloffset;\n      } else {\n        edge.height += edge.labeloffset;\n      }\n    }\n  });\n}\n\n/*\n * Creates temporary dummy nodes that capture the rank in which each edge's\n * label is going to, if it has one of non-zero width and height. We do this\n * so that we can safely remove empty ranks while preserving balance for the\n * label's position.\n */\nfunction injectEdgeLabelProxies(g) {\n  _.forEach(g.edges(), function (e) {\n    var edge = g.edge(e);\n    if (edge.width && edge.height) {\n      var v = g.node(e.v);\n      var w = g.node(e.w);\n      var label = { rank: (w.rank - v.rank) / 2 + v.rank, e: e };\n      util.addDummyNode(g, 'edge-proxy', label, '_ep');\n    }\n  });\n}\n\nfunction assignRankMinMax(g) {\n  var maxRank = 0;\n  _.forEach(g.nodes(), function (v) {\n    var node = g.node(v);\n    if (node.borderTop) {\n      node.minRank = g.node(node.borderTop).rank;\n      node.maxRank = g.node(node.borderBottom).rank;\n      // @ts-expect-error\n      maxRank = _.max(maxRank, node.maxRank);\n    }\n  });\n  g.graph().maxRank = maxRank;\n}\n\nfunction removeEdgeLabelProxies(g) {\n  _.forEach(g.nodes(), function (v) {\n    var node = g.node(v);\n    if (node.dummy === 'edge-proxy') {\n      g.edge(node.e).labelRank = node.rank;\n      g.removeNode(v);\n    }\n  });\n}\n\nfunction translateGraph(g) {\n  var minX = Number.POSITIVE_INFINITY;\n  var maxX = 0;\n  var minY = Number.POSITIVE_INFINITY;\n  var maxY = 0;\n  var graphLabel = g.graph();\n  var marginX = graphLabel.marginx || 0;\n  var marginY = graphLabel.marginy || 0;\n\n  function getExtremes(attrs) {\n    var x = attrs.x;\n    var y = attrs.y;\n    var w = attrs.width;\n    var h = attrs.height;\n    minX = Math.min(minX, x - w / 2);\n    maxX = Math.max(maxX, x + w / 2);\n    minY = Math.min(minY, y - h / 2);\n    maxY = Math.max(maxY, y + h / 2);\n  }\n\n  _.forEach(g.nodes(), function (v) {\n    getExtremes(g.node(v));\n  });\n  _.forEach(g.edges(), function (e) {\n    var edge = g.edge(e);\n    if (_.has(edge, 'x')) {\n      getExtremes(edge);\n    }\n  });\n\n  minX -= marginX;\n  minY -= marginY;\n\n  _.forEach(g.nodes(), function (v) {\n    var node = g.node(v);\n    node.x -= minX;\n    node.y -= minY;\n  });\n\n  _.forEach(g.edges(), function (e) {\n    var edge = g.edge(e);\n    _.forEach(edge.points, function (p) {\n      p.x -= minX;\n      p.y -= minY;\n    });\n    if (_.has(edge, 'x')) {\n      edge.x -= minX;\n    }\n    if (_.has(edge, 'y')) {\n      edge.y -= minY;\n    }\n  });\n\n  graphLabel.width = maxX - minX + marginX;\n  graphLabel.height = maxY - minY + marginY;\n}\n\nfunction assignNodeIntersects(g) {\n  _.forEach(g.edges(), function (e) {\n    var edge = g.edge(e);\n    var nodeV = g.node(e.v);\n    var nodeW = g.node(e.w);\n    var p1, p2;\n    if (!edge.points) {\n      edge.points = [];\n      p1 = nodeW;\n      p2 = nodeV;\n    } else {\n      p1 = edge.points[0];\n      p2 = edge.points[edge.points.length - 1];\n    }\n    edge.points.unshift(util.intersectRect(nodeV, p1));\n    edge.points.push(util.intersectRect(nodeW, p2));\n  });\n}\n\nfunction fixupEdgeLabelCoords(g) {\n  _.forEach(g.edges(), function (e) {\n    var edge = g.edge(e);\n    if (_.has(edge, 'x')) {\n      if (edge.labelpos === 'l' || edge.labelpos === 'r') {\n        edge.width -= edge.labeloffset;\n      }\n      switch (edge.labelpos) {\n        case 'l':\n          edge.x -= edge.width / 2 + edge.labeloffset;\n          break;\n        case 'r':\n          edge.x += edge.width / 2 + edge.labeloffset;\n          break;\n      }\n    }\n  });\n}\n\nfunction reversePointsForReversedEdges(g) {\n  _.forEach(g.edges(), function (e) {\n    var edge = g.edge(e);\n    if (edge.reversed) {\n      edge.points.reverse();\n    }\n  });\n}\n\nfunction removeBorderNodes(g) {\n  _.forEach(g.nodes(), function (v) {\n    if (g.children(v).length) {\n      var node = g.node(v);\n      var t = g.node(node.borderTop);\n      var b = g.node(node.borderBottom);\n      var l = g.node(_.last(node.borderLeft));\n      var r = g.node(_.last(node.borderRight));\n\n      node.width = Math.abs(r.x - l.x);\n      node.height = Math.abs(b.y - t.y);\n      node.x = l.x + node.width / 2;\n      node.y = t.y + node.height / 2;\n    }\n  });\n\n  _.forEach(g.nodes(), function (v) {\n    if (g.node(v).dummy === 'border') {\n      g.removeNode(v);\n    }\n  });\n}\n\nfunction removeSelfEdges(g) {\n  _.forEach(g.edges(), function (e) {\n    if (e.v === e.w) {\n      var node = g.node(e.v);\n      if (!node.selfEdges) {\n        node.selfEdges = [];\n      }\n      node.selfEdges.push({ e: e, label: g.edge(e) });\n      g.removeEdge(e);\n    }\n  });\n}\n\nfunction insertSelfEdges(g) {\n  var layers = util.buildLayerMatrix(g);\n  _.forEach(layers, function (layer) {\n    var orderShift = 0;\n    _.forEach(layer, function (v, i) {\n      var node = g.node(v);\n      node.order = i + orderShift;\n      _.forEach(node.selfEdges, function (selfEdge) {\n        util.addDummyNode(\n          g,\n          'selfedge',\n          {\n            width: selfEdge.label.width,\n            height: selfEdge.label.height,\n            rank: node.rank,\n            order: i + ++orderShift,\n            e: selfEdge.e,\n            label: selfEdge.label,\n          },\n          '_se'\n        );\n      });\n      delete node.selfEdges;\n    });\n  });\n}\n\nfunction positionSelfEdges(g) {\n  _.forEach(g.nodes(), function (v) {\n    var node = g.node(v);\n    if (node.dummy === 'selfedge') {\n      var selfNode = g.node(node.e.v);\n      var x = selfNode.x + selfNode.width / 2;\n      var y = selfNode.y;\n      var dx = node.x - x;\n      var dy = selfNode.height / 2;\n      g.setEdge(node.e, node.label);\n      g.removeNode(v);\n      node.label.points = [\n        { x: x + (2 * dx) / 3, y: y - dy },\n        { x: x + (5 * dx) / 6, y: y - dy },\n        { x: x + dx, y: y },\n        { x: x + (5 * dx) / 6, y: y + dy },\n        { x: x + (2 * dx) / 3, y: y + dy },\n      ];\n      node.label.x = node.x;\n      node.label.y = node.y;\n    }\n  });\n}\n\nfunction selectNumberAttrs(obj, attrs) {\n  return _.mapValues(_.pick(obj, attrs), Number);\n}\n\nfunction canonicalize(attrs) {\n  var newAttrs = {};\n  _.forEach(attrs, function (v, k) {\n    newAttrs[k.toLowerCase()] = v;\n  });\n  return newAttrs;\n}\n"],"names":["INFINITY","MAX_INTEGER","toFinite","value","toNumber","sign","toInteger","result","remainder","noop","baseFindIndex","array","predicate","fromIndex","fromRight","length","index","baseIsNaN","strictIndexOf","baseIndexOf","arrayIncludes","spreadableSymbol","Symbol","isFlattenable","isArray","isArguments","baseFlatten","depth","isStrict","arrayPush","flatten","flatRest","func","setToString","overRest","arrayReduce","iteratee","accumulator","initAccum","baseAssign","object","source","copyObject","keys","baseAssignIn","keysIn","copySymbols","getSymbols","nativeGetSymbols","getSymbolsIn","getPrototype","stubArray","getSymbolsIn$1","copySymbolsIn","getAllKeysIn","baseGetAllKeys","objectProto","hasOwnProperty","initCloneArray","cloneDataView","dataView","isDeep","buffer","cloneArrayBuffer","reFlags","cloneRegExp","regexp","symbolProto","symbolValueOf","cloneSymbol","symbol","boolTag","dateTag","mapTag","numberTag","regexpTag","setTag","stringTag","symbolTag","arrayBufferTag","dataViewTag","float32Tag","float64Tag","int8Tag","int16Tag","int32Tag","uint8Tag","uint8ClampedTag","uint16Tag","uint32Tag","initCloneByTag","tag","Ctor","cloneTypedArray","baseIsMap","isObjectLike","getTag","nodeIsMap","nodeUtil","isMap","baseUnary","isMap$1","baseIsSet","nodeIsSet","isSet","isSet$1","CLONE_DEEP_FLAG","CLONE_FLAT_FLAG","CLONE_SYMBOLS_FLAG","argsTag","arrayTag","errorTag","funcTag","genTag","objectTag","weakMapTag","cloneableTags","baseClone","bitmask","customizer","key","stack","isFlat","isFull","isObject","isArr","copyArray","isFunc","isBuffer","cloneBuffer","initCloneObject","Stack","stacked","subValue","keysFunc","getAllKeys","props","arrayEach","assignValue","cloneDeep","defaults","baseRest","sources","guard","isIterateeCall","propsIndex","propsLength","eq","defaults$1","arrayIncludesWith","comparator","last","baseFilter","collection","baseEach","filter","arrayFilter","baseIteratee","createFind","findIndexFunc","iterable","isArrayLike","nativeMax","findIndex","find","find$1","forIn","baseFor","castFunction","forOwn","baseForOwn","baseGt","other","baseHas","has","path","hasPath","baseValues","arrayMap","values","baseLt","mapValues","baseAssignValue","baseExtremum","current","computed","isSymbol","max","identity","min","minBy","baseSet","castPath","lastIndex","nested","toKey","newValue","objValue","isIndex","basePickBy","paths","baseGet","baseSortBy","comparer","compareAscending","valIsDefined","valIsNull","valIsReflexive","valIsSymbol","othIsDefined","othIsNull","othIsReflexive","othIsSymbol","compareMultiple","orders","objCriteria","othCriteria","ordersLength","order","baseOrderBy","iteratees","baseMap","criteria","basePick","hasIn","pick","pick$1","nativeCeil","baseRange","start","end","step","createRange","range","range$1","baseReduce","eachFunc","reduce","sortBy","sortBy$1","createSet","Set","setToArray","createSet$1","LARGE_ARRAY_SIZE","baseUniq","includes","isCommon","seen","set","cacheHas","SetCache","outer","seenIndex","union","arrays","isArrayLikeObject","union$1","idCounter","uniqueId","prefix","id","toString","baseZipObject","assignFunc","valsLength","zipObject","DEFAULT_EDGE_NAME","GRAPH_NODE","EDGE_KEY_DELIM","Graph","opts","_.has","_.constant","label","newDefault","_.isFunction","_.keys","self","_.filter","v","_.isEmpty","vs","args","_.each","removeEdge","e","child","parent","_.isUndefined","ancestor","children","predsV","sucsV","preds","_.union","neighbors","copy","parents","findParent","_.values","_.reduce","w","name","valueSpecified","arg0","edgeArgsToId","edgeObj","edgeArgsToObj","incrementOrInitEntry","edgeObjToId","edge","decrementOrRemoveEntry","u","inV","edges","outV","inEdges","map","k","isDirected","v_","w_","tmp","List","sentinel","entry","unlink","strs","curr","filterOutLinks","DEFAULT_WEIGHT_FN","greedyFAS","g","weightFn","state","buildState","results","doGreedyFAS","_.flatten","_.map","buckets","zeroIdx","sinks","removeNode","i","collectPredecessors","_.forEach","weight","uEntry","assignBucket","wEntry","fasGraph","maxIn","maxOut","prevWeight","edgeWeight","_.range","run","fas","dfsFAS","_.uniqueId","visited","dfs","undo","forwardName","addDummyNode","type","attrs","simplify","simplified","simpleLabel","asNonCompoundGraph","intersectRect","rect","point","x","y","dx","dy","h","sx","sy","buildLayerMatrix","layering","maxRank","node","rank","normalizeRanks","_.min","removeEmptyRanks","offset","layers","delta","nodeRankFactor","addBorderNode","_.max","partition","fn","time","_.now","notime","addBorderSegments","prop","sg","sgNode","prev","util.addDummyNode","adjust","rankDir","swapWidthHeight","reverseY","swapXY","swapWidthHeightOne","reverseYOne","swapXYOne","normalizeEdge","vRank","wRank","edgeLabel","labelRank","dummy","origLabel","longestPath","slack","feasibleTree","t","size","tightTree","findMinSlackEdge","shiftRanks","edgeV","_.minBy","CycleException","_.isArray","navigation","acc","doDfs","postorder","preorder","networkSimplex","initLowLimValues","initCutValues","calcCutValue","leaveEdge","enterEdge","exchangeEdges","f","alg.postorder","assignCutValue","childLab","childIsTail","graphEdge","cutValue","isOutEdge","pointsToHead","otherWeight","isTreeEdge","otherCutValue","tree","root","dfsAssignLowLim","nextLim","low","_.find","vLabel","wLabel","tailLabel","flip","candidates","isDescendant","updateRanks","alg.preorder","flipped","rootLabel","networkSimplexRanker","tightTreeRanker","longestPathRanker","depths","treeDepths","height","nodeSep","sumWeights","top","util.addBorderNode","bottom","childNode","childTop","childBottom","thisWeight","minlen","cleanup","graphLabel","addSubgraphConstraints","cg","rootPrev","prevChild","buildLayerGraph","relationship","createRootNode","crossCount","cc","twoLayerCrossCount","northLayer","southLayer","southPos","_.zipObject","southEntries","_.sortBy","firstIndex","treeSize","weightSum","initOrder","simpleNodes","orderedVs","barycenter","movable","nodeU","resolveConflicts","entries","mappedEntries","entryV","entryW","sourceSet","doResolveConflicts","handleIn","vEntry","mergeEntries","handleOut","_.pick","target","sum","sort","biasRight","parts","util.partition","sortable","unsortable","vsIndex","compareWithBias","consumeUnsortable","_.last","bias","sortSubgraph","bl","br","subgraphs","barycenters","subgraphResult","mergeBarycenters","expandSubgraphs","blPred","brPred","util.maxRank","downLayerGraphs","buildLayerGraphs","upLayerGraphs","assignOrder","bestCC","best","lastBest","sweepLayerGraphs","util.buildLayerMatrix","_.cloneDeep","ranks","layerGraphs","lg","sorted","layer","parentDummyChains","postorderNums","pathData","findPath","lca","pathIdx","pathV","ascending","vPath","wPath","lim","findType1Conflicts","conflicts","visitLayer","prevLayer","k0","scanPos","prevLayerLength","lastNode","findOtherInnerSegmentNode","k1","scanNode","uLabel","uPos","addConflict","findType2Conflicts","scan","south","southEnd","prevNorthBorder","nextNorthBorder","uNode","north","prevNorthPos","nextNorthPos","southLookahead","predecessors","conflictsV","hasConflict","verticalAlignment","neighborFn","align","pos","prevIdx","ws","mp","il","horizontalCompaction","reverseSep","xs","blockG","buildBlockGraph","borderType","iterate","setXsFunc","nextNodesFunc","elem","pass1","pass2","blockGraph","sepFn","sep","vRoot","uRoot","prevMax","findSmallestWidthAlignment","xss","_.forIn","halfWidth","width","alignCoordinates","alignTo","alignToVals","alignToMin","alignToMax","vert","horiz","alignment","xsVals","_.mapValues","balance","ignore","positionX","_.merge","adjustedLayering","inner","smallestWidth","edgeSep","position","util.asNonCompoundGraph","positionY","_.forOwn","rankSep","prevY","maxHeight","layout","util.time","util.notime","layoutGraph","buildLayoutGraph","runLayout","updateInputGraph","makeSpaceForEdgeLabels","removeSelfEdges","acyclic.run","nestingGraph.run","injectEdgeLabelProxies","util.removeEmptyRanks","nestingGraph.cleanup","util.normalizeRanks","assignRankMinMax","removeEdgeLabelProxies","normalize.run","insertSelfEdges","coordinateSystem.adjust","positionSelfEdges","removeBorderNodes","normalize.undo","fixupEdgeLabelCoords","coordinateSystem.undo","translateGraph","assignNodeIntersects","reversePointsForReversedEdges","acyclic.undo","inputGraph","inputLabel","layoutLabel","graphNumAttrs","graphDefaults","graphAttrs","nodeNumAttrs","nodeDefaults","edgeNumAttrs","edgeDefaults","edgeAttrs","graph","canonicalize","selectNumberAttrs","_.defaults","minX","maxX","minY","maxY","marginX","marginY","getExtremes","p","nodeV","nodeW","p1","p2","util.intersectRect","b","l","r","orderShift","selfEdge","selfNode","obj","newAttrs"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100]}